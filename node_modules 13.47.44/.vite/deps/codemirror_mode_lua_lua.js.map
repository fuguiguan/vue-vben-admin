{
  "version": 3,
  "sources": ["../../.pnpm/codemirror@5.65.16/node_modules/codemirror/mode/lua/lua.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// LUA mode. Ported to CodeMirror 2 from Franciszek Wawrzak's\n// CodeMirror 1 mode.\n// highlights keywords, strings, comments (no leveling supported! (\"[==[\")), tokens, basic indenting\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"lua\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit;\n\n  function prefixRE(words) {\n    return new RegExp(\"^(?:\" + words.join(\"|\") + \")\", \"i\");\n  }\n  function wordRE(words) {\n    return new RegExp(\"^(?:\" + words.join(\"|\") + \")$\", \"i\");\n  }\n  var specials = wordRE(parserConfig.specials || []);\n\n  // long list of standard functions from lua manual\n  var builtins = wordRE([\n    \"_G\",\"_VERSION\",\"assert\",\"collectgarbage\",\"dofile\",\"error\",\"getfenv\",\"getmetatable\",\"ipairs\",\"load\",\n    \"loadfile\",\"loadstring\",\"module\",\"next\",\"pairs\",\"pcall\",\"print\",\"rawequal\",\"rawget\",\"rawset\",\"require\",\n    \"select\",\"setfenv\",\"setmetatable\",\"tonumber\",\"tostring\",\"type\",\"unpack\",\"xpcall\",\n\n    \"coroutine.create\",\"coroutine.resume\",\"coroutine.running\",\"coroutine.status\",\"coroutine.wrap\",\"coroutine.yield\",\n\n    \"debug.debug\",\"debug.getfenv\",\"debug.gethook\",\"debug.getinfo\",\"debug.getlocal\",\"debug.getmetatable\",\n    \"debug.getregistry\",\"debug.getupvalue\",\"debug.setfenv\",\"debug.sethook\",\"debug.setlocal\",\"debug.setmetatable\",\n    \"debug.setupvalue\",\"debug.traceback\",\n\n    \"close\",\"flush\",\"lines\",\"read\",\"seek\",\"setvbuf\",\"write\",\n\n    \"io.close\",\"io.flush\",\"io.input\",\"io.lines\",\"io.open\",\"io.output\",\"io.popen\",\"io.read\",\"io.stderr\",\"io.stdin\",\n    \"io.stdout\",\"io.tmpfile\",\"io.type\",\"io.write\",\n\n    \"math.abs\",\"math.acos\",\"math.asin\",\"math.atan\",\"math.atan2\",\"math.ceil\",\"math.cos\",\"math.cosh\",\"math.deg\",\n    \"math.exp\",\"math.floor\",\"math.fmod\",\"math.frexp\",\"math.huge\",\"math.ldexp\",\"math.log\",\"math.log10\",\"math.max\",\n    \"math.min\",\"math.modf\",\"math.pi\",\"math.pow\",\"math.rad\",\"math.random\",\"math.randomseed\",\"math.sin\",\"math.sinh\",\n    \"math.sqrt\",\"math.tan\",\"math.tanh\",\n\n    \"os.clock\",\"os.date\",\"os.difftime\",\"os.execute\",\"os.exit\",\"os.getenv\",\"os.remove\",\"os.rename\",\"os.setlocale\",\n    \"os.time\",\"os.tmpname\",\n\n    \"package.cpath\",\"package.loaded\",\"package.loaders\",\"package.loadlib\",\"package.path\",\"package.preload\",\n    \"package.seeall\",\n\n    \"string.byte\",\"string.char\",\"string.dump\",\"string.find\",\"string.format\",\"string.gmatch\",\"string.gsub\",\n    \"string.len\",\"string.lower\",\"string.match\",\"string.rep\",\"string.reverse\",\"string.sub\",\"string.upper\",\n\n    \"table.concat\",\"table.insert\",\"table.maxn\",\"table.remove\",\"table.sort\"\n  ]);\n  var keywords = wordRE([\"and\",\"break\",\"elseif\",\"false\",\"nil\",\"not\",\"or\",\"return\",\n                         \"true\",\"function\", \"end\", \"if\", \"then\", \"else\", \"do\",\n                         \"while\", \"repeat\", \"until\", \"for\", \"in\", \"local\" ]);\n\n  var indentTokens = wordRE([\"function\", \"if\",\"repeat\",\"do\", \"\\\\(\", \"{\"]);\n  var dedentTokens = wordRE([\"end\", \"until\", \"\\\\)\", \"}\"]);\n  var dedentPartial = prefixRE([\"end\", \"until\", \"\\\\)\", \"}\", \"else\", \"elseif\"]);\n\n  function readBracket(stream) {\n    var level = 0;\n    while (stream.eat(\"=\")) ++level;\n    stream.eat(\"[\");\n    return level;\n  }\n\n  function normal(stream, state) {\n    var ch = stream.next();\n    if (ch == \"-\" && stream.eat(\"-\")) {\n      if (stream.eat(\"[\") && stream.eat(\"[\"))\n        return (state.cur = bracketed(readBracket(stream), \"comment\"))(stream, state);\n      stream.skipToEnd();\n      return \"comment\";\n    }\n    if (ch == \"\\\"\" || ch == \"'\")\n      return (state.cur = string(ch))(stream, state);\n    if (ch == \"[\" && /[\\[=]/.test(stream.peek()))\n      return (state.cur = bracketed(readBracket(stream), \"string\"))(stream, state);\n    if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\w.%]/);\n      return \"number\";\n    }\n    if (/[\\w_]/.test(ch)) {\n      stream.eatWhile(/[\\w\\\\\\-_.]/);\n      return \"variable\";\n    }\n    return null;\n  }\n\n  function bracketed(level, style) {\n    return function(stream, state) {\n      var curlev = null, ch;\n      while ((ch = stream.next()) != null) {\n        if (curlev == null) {if (ch == \"]\") curlev = 0;}\n        else if (ch == \"=\") ++curlev;\n        else if (ch == \"]\" && curlev == level) { state.cur = normal; break; }\n        else curlev = null;\n      }\n      return style;\n    };\n  }\n\n  function string(quote) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && !escaped) break;\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      if (!escaped) state.cur = normal;\n      return \"string\";\n    };\n  }\n\n  return {\n    startState: function(basecol) {\n      return {basecol: basecol || 0, indentDepth: 0, cur: normal};\n    },\n\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      var style = state.cur(stream, state);\n      var word = stream.current();\n      if (style == \"variable\") {\n        if (keywords.test(word)) style = \"keyword\";\n        else if (builtins.test(word)) style = \"builtin\";\n        else if (specials.test(word)) style = \"variable-2\";\n      }\n      if ((style != \"comment\") && (style != \"string\")){\n        if (indentTokens.test(word)) ++state.indentDepth;\n        else if (dedentTokens.test(word)) --state.indentDepth;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      var closing = dedentPartial.test(textAfter);\n      return state.basecol + indentUnit * (state.indentDepth - (closing ? 1 : 0));\n    },\n\n    electricInput: /^\\s*(?:end|until|else|\\)|\\})$/,\n    lineComment: \"--\",\n    blockCommentStart: \"--[[\",\n    blockCommentEnd: \"]]\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-lua\", \"lua\");\n\n});\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AAOA,KAAC,SAAS,KAAK;AACb,UAAI,OAAO,WAAW,YAAY,OAAO,UAAU;AACjD,YAAI,oBAA+B;AAAA,eAC5B,OAAO,UAAU,cAAc,OAAO;AAC7C,eAAO,CAAC,sBAAsB,GAAG,GAAG;AAAA;AAEpC,YAAI,UAAU;AAAA,IAClB,GAAG,SAASA,aAAY;AACxB;AAEA,MAAAA,YAAW,WAAW,OAAO,SAAS,QAAQ,cAAc;AAC1D,YAAI,aAAa,OAAO;AAExB,iBAAS,SAAS,OAAO;AACvB,iBAAO,IAAI,OAAO,SAAS,MAAM,KAAK,GAAG,IAAI,KAAK,GAAG;AAAA,QACvD;AACA,iBAAS,OAAO,OAAO;AACrB,iBAAO,IAAI,OAAO,SAAS,MAAM,KAAK,GAAG,IAAI,MAAM,GAAG;AAAA,QACxD;AACA,YAAI,WAAW,OAAO,aAAa,YAAY,CAAC,CAAC;AAGjD,YAAI,WAAW,OAAO;AAAA,UACpB;AAAA,UAAK;AAAA,UAAW;AAAA,UAAS;AAAA,UAAiB;AAAA,UAAS;AAAA,UAAQ;AAAA,UAAU;AAAA,UAAe;AAAA,UAAS;AAAA,UAC7F;AAAA,UAAW;AAAA,UAAa;AAAA,UAAS;AAAA,UAAO;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAW;AAAA,UAAS;AAAA,UAAS;AAAA,UAC7F;AAAA,UAAS;AAAA,UAAU;AAAA,UAAe;AAAA,UAAW;AAAA,UAAW;AAAA,UAAO;AAAA,UAAS;AAAA,UAExE;AAAA,UAAmB;AAAA,UAAmB;AAAA,UAAoB;AAAA,UAAmB;AAAA,UAAiB;AAAA,UAE9F;AAAA,UAAc;AAAA,UAAgB;AAAA,UAAgB;AAAA,UAAgB;AAAA,UAAiB;AAAA,UAC/E;AAAA,UAAoB;AAAA,UAAmB;AAAA,UAAgB;AAAA,UAAgB;AAAA,UAAiB;AAAA,UACxF;AAAA,UAAmB;AAAA,UAEnB;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAO;AAAA,UAAO;AAAA,UAAU;AAAA,UAEhD;AAAA,UAAW;AAAA,UAAW;AAAA,UAAW;AAAA,UAAW;AAAA,UAAU;AAAA,UAAY;AAAA,UAAW;AAAA,UAAU;AAAA,UAAY;AAAA,UACnG;AAAA,UAAY;AAAA,UAAa;AAAA,UAAU;AAAA,UAEnC;AAAA,UAAW;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UAAa;AAAA,UAAY;AAAA,UAAW;AAAA,UAAY;AAAA,UAC/F;AAAA,UAAW;AAAA,UAAa;AAAA,UAAY;AAAA,UAAa;AAAA,UAAY;AAAA,UAAa;AAAA,UAAW;AAAA,UAAa;AAAA,UAClG;AAAA,UAAW;AAAA,UAAY;AAAA,UAAU;AAAA,UAAW;AAAA,UAAW;AAAA,UAAc;AAAA,UAAkB;AAAA,UAAW;AAAA,UAClG;AAAA,UAAY;AAAA,UAAW;AAAA,UAEvB;AAAA,UAAW;AAAA,UAAU;AAAA,UAAc;AAAA,UAAa;AAAA,UAAU;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UAC9F;AAAA,UAAU;AAAA,UAEV;AAAA,UAAgB;AAAA,UAAiB;AAAA,UAAkB;AAAA,UAAkB;AAAA,UAAe;AAAA,UACpF;AAAA,UAEA;AAAA,UAAc;AAAA,UAAc;AAAA,UAAc;AAAA,UAAc;AAAA,UAAgB;AAAA,UAAgB;AAAA,UACxF;AAAA,UAAa;AAAA,UAAe;AAAA,UAAe;AAAA,UAAa;AAAA,UAAiB;AAAA,UAAa;AAAA,UAEtF;AAAA,UAAe;AAAA,UAAe;AAAA,UAAa;AAAA,UAAe;AAAA,QAC5D,CAAC;AACD,YAAI,WAAW,OAAO;AAAA,UAAC;AAAA,UAAM;AAAA,UAAQ;AAAA,UAAS;AAAA,UAAQ;AAAA,UAAM;AAAA,UAAM;AAAA,UAAK;AAAA,UAChD;AAAA,UAAO;AAAA,UAAY;AAAA,UAAO;AAAA,UAAM;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAChD;AAAA,UAAS;AAAA,UAAU;AAAA,UAAS;AAAA,UAAO;AAAA,UAAM;AAAA,QAAQ,CAAC;AAEzE,YAAI,eAAe,OAAO,CAAC,YAAY,MAAK,UAAS,MAAM,OAAO,GAAG,CAAC;AACtE,YAAI,eAAe,OAAO,CAAC,OAAO,SAAS,OAAO,GAAG,CAAC;AACtD,YAAI,gBAAgB,SAAS,CAAC,OAAO,SAAS,OAAO,KAAK,QAAQ,QAAQ,CAAC;AAE3E,iBAAS,YAAY,QAAQ;AAC3B,cAAI,QAAQ;AACZ,iBAAO,OAAO,IAAI,GAAG;AAAG,cAAE;AAC1B,iBAAO,IAAI,GAAG;AACd,iBAAO;AAAA,QACT;AAEA,iBAAS,OAAO,QAAQ,OAAO;AAC7B,cAAI,KAAK,OAAO,KAAK;AACrB,cAAI,MAAM,OAAO,OAAO,IAAI,GAAG,GAAG;AAChC,gBAAI,OAAO,IAAI,GAAG,KAAK,OAAO,IAAI,GAAG;AACnC,sBAAQ,MAAM,MAAM,UAAU,YAAY,MAAM,GAAG,SAAS,GAAG,QAAQ,KAAK;AAC9E,mBAAO,UAAU;AACjB,mBAAO;AAAA,UACT;AACA,cAAI,MAAM,OAAQ,MAAM;AACtB,oBAAQ,MAAM,MAAM,OAAO,EAAE,GAAG,QAAQ,KAAK;AAC/C,cAAI,MAAM,OAAO,QAAQ,KAAK,OAAO,KAAK,CAAC;AACzC,oBAAQ,MAAM,MAAM,UAAU,YAAY,MAAM,GAAG,QAAQ,GAAG,QAAQ,KAAK;AAC7E,cAAI,KAAK,KAAK,EAAE,GAAG;AACjB,mBAAO,SAAS,QAAQ;AACxB,mBAAO;AAAA,UACT;AACA,cAAI,QAAQ,KAAK,EAAE,GAAG;AACpB,mBAAO,SAAS,YAAY;AAC5B,mBAAO;AAAA,UACT;AACA,iBAAO;AAAA,QACT;AAEA,iBAAS,UAAU,OAAO,OAAO;AAC/B,iBAAO,SAAS,QAAQ,OAAO;AAC7B,gBAAI,SAAS,MAAM;AACnB,oBAAQ,KAAK,OAAO,KAAK,MAAM,MAAM;AACnC,kBAAI,UAAU,MAAM;AAAC,oBAAI,MAAM;AAAK,2BAAS;AAAA,cAAE,WACtC,MAAM;AAAK,kBAAE;AAAA,uBACb,MAAM,OAAO,UAAU,OAAO;AAAE,sBAAM,MAAM;AAAQ;AAAA,cAAO;AAC/D,yBAAS;AAAA,YAChB;AACA,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,iBAAS,OAAO,OAAO;AACrB,iBAAO,SAAS,QAAQ,OAAO;AAC7B,gBAAI,UAAU,OAAO;AACrB,oBAAQ,KAAK,OAAO,KAAK,MAAM,MAAM;AACnC,kBAAI,MAAM,SAAS,CAAC;AAAS;AAC7B,wBAAU,CAAC,WAAW,MAAM;AAAA,YAC9B;AACA,gBAAI,CAAC;AAAS,oBAAM,MAAM;AAC1B,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO;AAAA,UACL,YAAY,SAAS,SAAS;AAC5B,mBAAO,EAAC,SAAS,WAAW,GAAG,aAAa,GAAG,KAAK,OAAM;AAAA,UAC5D;AAAA,UAEA,OAAO,SAAS,QAAQ,OAAO;AAC7B,gBAAI,OAAO,SAAS;AAAG,qBAAO;AAC9B,gBAAI,QAAQ,MAAM,IAAI,QAAQ,KAAK;AACnC,gBAAI,OAAO,OAAO,QAAQ;AAC1B,gBAAI,SAAS,YAAY;AACvB,kBAAI,SAAS,KAAK,IAAI;AAAG,wBAAQ;AAAA,uBACxB,SAAS,KAAK,IAAI;AAAG,wBAAQ;AAAA,uBAC7B,SAAS,KAAK,IAAI;AAAG,wBAAQ;AAAA,YACxC;AACA,gBAAK,SAAS,aAAe,SAAS,UAAU;AAC9C,kBAAI,aAAa,KAAK,IAAI;AAAG,kBAAE,MAAM;AAAA,uBAC5B,aAAa,KAAK,IAAI;AAAG,kBAAE,MAAM;AAAA,YAC5C;AACA,mBAAO;AAAA,UACT;AAAA,UAEA,QAAQ,SAAS,OAAO,WAAW;AACjC,gBAAI,UAAU,cAAc,KAAK,SAAS;AAC1C,mBAAO,MAAM,UAAU,cAAc,MAAM,eAAe,UAAU,IAAI;AAAA,UAC1E;AAAA,UAEA,eAAe;AAAA,UACf,aAAa;AAAA,UACb,mBAAmB;AAAA,UACnB,iBAAiB;AAAA,QACnB;AAAA,MACF,CAAC;AAED,MAAAA,YAAW,WAAW,cAAc,KAAK;AAAA,IAEzC,CAAC;AAAA;AAAA;",
  "names": ["CodeMirror"]
}
