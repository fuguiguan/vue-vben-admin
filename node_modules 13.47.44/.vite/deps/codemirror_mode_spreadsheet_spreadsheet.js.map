{
  "version": 3,
  "sources": ["../../.pnpm/codemirror@5.65.16/node_modules/codemirror/mode/spreadsheet/spreadsheet.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"spreadsheet\", function () {\n    return {\n      startState: function () {\n        return {\n          stringType: null,\n          stack: []\n        };\n      },\n      token: function (stream, state) {\n        if (!stream) return;\n\n        //check for state changes\n        if (state.stack.length === 0) {\n          //strings\n          if ((stream.peek() == '\"') || (stream.peek() == \"'\")) {\n            state.stringType = stream.peek();\n            stream.next(); // Skip quote\n            state.stack.unshift(\"string\");\n          }\n        }\n\n        //return state\n        //stack has\n        switch (state.stack[0]) {\n        case \"string\":\n          while (state.stack[0] === \"string\" && !stream.eol()) {\n            if (stream.peek() === state.stringType) {\n              stream.next(); // Skip quote\n              state.stack.shift(); // Clear flag\n            } else if (stream.peek() === \"\\\\\") {\n              stream.next();\n              stream.next();\n            } else {\n              stream.match(/^.[^\\\\\\\"\\']*/);\n            }\n          }\n          return \"string\";\n\n        case \"characterClass\":\n          while (state.stack[0] === \"characterClass\" && !stream.eol()) {\n            if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./)))\n              state.stack.shift();\n          }\n          return \"operator\";\n        }\n\n        var peek = stream.peek();\n\n        //no stack\n        switch (peek) {\n        case \"[\":\n          stream.next();\n          state.stack.unshift(\"characterClass\");\n          return \"bracket\";\n        case \":\":\n          stream.next();\n          return \"operator\";\n        case \"\\\\\":\n          if (stream.match(/\\\\[a-z]+/)) return \"string-2\";\n          else {\n            stream.next();\n            return \"atom\";\n          }\n        case \".\":\n        case \",\":\n        case \";\":\n        case \"*\":\n        case \"-\":\n        case \"+\":\n        case \"^\":\n        case \"<\":\n        case \"/\":\n        case \"=\":\n          stream.next();\n          return \"atom\";\n        case \"$\":\n          stream.next();\n          return \"builtin\";\n        }\n\n        if (stream.match(/\\d+/)) {\n          if (stream.match(/^\\w+/)) return \"error\";\n          return \"number\";\n        } else if (stream.match(/^[a-zA-Z_]\\w*/)) {\n          if (stream.match(/(?=[\\(.])/, false)) return \"keyword\";\n          return \"variable-2\";\n        } else if ([\"[\", \"]\", \"(\", \")\", \"{\", \"}\"].indexOf(peek) != -1) {\n          stream.next();\n          return \"bracket\";\n        } else if (!stream.eatSpace()) {\n          stream.next();\n        }\n        return null;\n      }\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-spreadsheet\", \"spreadsheet\");\n});\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AAGA,KAAC,SAAS,KAAK;AACb,UAAI,OAAO,WAAW,YAAY,OAAO,UAAU;AACjD,YAAI,oBAA+B;AAAA,eAC5B,OAAO,UAAU,cAAc,OAAO;AAC7C,eAAO,CAAC,sBAAsB,GAAG,GAAG;AAAA;AAEpC,YAAI,UAAU;AAAA,IAClB,GAAG,SAASA,aAAY;AACtB;AAEA,MAAAA,YAAW,WAAW,eAAe,WAAY;AAC/C,eAAO;AAAA,UACL,YAAY,WAAY;AACtB,mBAAO;AAAA,cACL,YAAY;AAAA,cACZ,OAAO,CAAC;AAAA,YACV;AAAA,UACF;AAAA,UACA,OAAO,SAAU,QAAQ,OAAO;AAC9B,gBAAI,CAAC;AAAQ;AAGb,gBAAI,MAAM,MAAM,WAAW,GAAG;AAE5B,kBAAK,OAAO,KAAK,KAAK,OAAS,OAAO,KAAK,KAAK,KAAM;AACpD,sBAAM,aAAa,OAAO,KAAK;AAC/B,uBAAO,KAAK;AACZ,sBAAM,MAAM,QAAQ,QAAQ;AAAA,cAC9B;AAAA,YACF;AAIA,oBAAQ,MAAM,MAAM,CAAC,GAAG;AAAA,cACxB,KAAK;AACH,uBAAO,MAAM,MAAM,CAAC,MAAM,YAAY,CAAC,OAAO,IAAI,GAAG;AACnD,sBAAI,OAAO,KAAK,MAAM,MAAM,YAAY;AACtC,2BAAO,KAAK;AACZ,0BAAM,MAAM,MAAM;AAAA,kBACpB,WAAW,OAAO,KAAK,MAAM,MAAM;AACjC,2BAAO,KAAK;AACZ,2BAAO,KAAK;AAAA,kBACd,OAAO;AACL,2BAAO,MAAM,cAAc;AAAA,kBAC7B;AAAA,gBACF;AACA,uBAAO;AAAA,cAET,KAAK;AACH,uBAAO,MAAM,MAAM,CAAC,MAAM,oBAAoB,CAAC,OAAO,IAAI,GAAG;AAC3D,sBAAI,EAAE,OAAO,MAAM,WAAW,KAAK,OAAO,MAAM,MAAM;AACpD,0BAAM,MAAM,MAAM;AAAA,gBACtB;AACA,uBAAO;AAAA,YACT;AAEA,gBAAI,OAAO,OAAO,KAAK;AAGvB,oBAAQ,MAAM;AAAA,cACd,KAAK;AACH,uBAAO,KAAK;AACZ,sBAAM,MAAM,QAAQ,gBAAgB;AACpC,uBAAO;AAAA,cACT,KAAK;AACH,uBAAO,KAAK;AACZ,uBAAO;AAAA,cACT,KAAK;AACH,oBAAI,OAAO,MAAM,UAAU;AAAG,yBAAO;AAAA,qBAChC;AACH,yBAAO,KAAK;AACZ,yBAAO;AAAA,gBACT;AAAA,cACF,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AACH,uBAAO,KAAK;AACZ,uBAAO;AAAA,cACT,KAAK;AACH,uBAAO,KAAK;AACZ,uBAAO;AAAA,YACT;AAEA,gBAAI,OAAO,MAAM,KAAK,GAAG;AACvB,kBAAI,OAAO,MAAM,MAAM;AAAG,uBAAO;AACjC,qBAAO;AAAA,YACT,WAAW,OAAO,MAAM,eAAe,GAAG;AACxC,kBAAI,OAAO,MAAM,aAAa,KAAK;AAAG,uBAAO;AAC7C,qBAAO;AAAA,YACT,WAAW,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,EAAE,QAAQ,IAAI,KAAK,IAAI;AAC7D,qBAAO,KAAK;AACZ,qBAAO;AAAA,YACT,WAAW,CAAC,OAAO,SAAS,GAAG;AAC7B,qBAAO,KAAK;AAAA,YACd;AACA,mBAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF,CAAC;AAED,MAAAA,YAAW,WAAW,sBAAsB,aAAa;AAAA,IAC3D,CAAC;AAAA;AAAA;",
  "names": ["CodeMirror"]
}
