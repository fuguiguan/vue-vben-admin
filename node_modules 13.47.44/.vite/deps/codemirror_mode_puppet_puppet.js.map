{
  "version": 3,
  "sources": ["../../.pnpm/codemirror@5.65.16/node_modules/codemirror/mode/puppet/puppet.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"puppet\", function () {\n  // Stores the words from the define method\n  var words = {};\n  // Taken, mostly, from the Puppet official variable standards regex\n  var variable_regex = /({)?([a-z][a-z0-9_]*)?((::[a-z][a-z0-9_]*)*::)?[a-zA-Z0-9_]+(})?/;\n\n  // Takes a string of words separated by spaces and adds them as\n  // keys with the value of the first argument 'style'\n  function define(style, string) {\n    var split = string.split(' ');\n    for (var i = 0; i < split.length; i++) {\n      words[split[i]] = style;\n    }\n  }\n\n  // Takes commonly known puppet types/words and classifies them to a style\n  define('keyword', 'class define site node include import inherits');\n  define('keyword', 'case if else in and elsif default or');\n  define('atom', 'false true running present absent file directory undef');\n  define('builtin', 'action augeas burst chain computer cron destination dport exec ' +\n    'file filebucket group host icmp iniface interface jump k5login limit log_level ' +\n    'log_prefix macauthorization mailalias maillist mcx mount nagios_command ' +\n    'nagios_contact nagios_contactgroup nagios_host nagios_hostdependency ' +\n    'nagios_hostescalation nagios_hostextinfo nagios_hostgroup nagios_service ' +\n    'nagios_servicedependency nagios_serviceescalation nagios_serviceextinfo ' +\n    'nagios_servicegroup nagios_timeperiod name notify outiface package proto reject ' +\n    'resources router schedule scheduled_task selboolean selmodule service source ' +\n    'sport ssh_authorized_key sshkey stage state table tidy todest toports tosource ' +\n    'user vlan yumrepo zfs zone zpool');\n\n  // After finding a start of a string ('|\") this function attempts to find the end;\n  // If a variable is encountered along the way, we display it differently when it\n  // is encapsulated in a double-quoted string.\n  function tokenString(stream, state) {\n    var current, prev, found_var = false;\n    while (!stream.eol() && (current = stream.next()) != state.pending) {\n      if (current === '$' && prev != '\\\\' && state.pending == '\"') {\n        found_var = true;\n        break;\n      }\n      prev = current;\n    }\n    if (found_var) {\n      stream.backUp(1);\n    }\n    if (current == state.pending) {\n      state.continueString = false;\n    } else {\n      state.continueString = true;\n    }\n    return \"string\";\n  }\n\n  // Main function\n  function tokenize(stream, state) {\n    // Matches one whole word\n    var word = stream.match(/[\\w]+/, false);\n    // Matches attributes (i.e. ensure => present ; 'ensure' would be matched)\n    var attribute = stream.match(/(\\s+)?\\w+\\s+=>.*/, false);\n    // Matches non-builtin resource declarations\n    // (i.e. \"apache::vhost {\" or \"mycustomclasss {\" would be matched)\n    var resource = stream.match(/(\\s+)?[\\w:_]+(\\s+)?{/, false);\n    // Matches virtual and exported resources (i.e. @@user { ; and the like)\n    var special_resource = stream.match(/(\\s+)?[@]{1,2}[\\w:_]+(\\s+)?{/, false);\n\n    // Finally advance the stream\n    var ch = stream.next();\n\n    // Have we found a variable?\n    if (ch === '$') {\n      if (stream.match(variable_regex)) {\n        // If so, and its in a string, assign it a different color\n        return state.continueString ? 'variable-2' : 'variable';\n      }\n      // Otherwise return an invalid variable\n      return \"error\";\n    }\n    // Should we still be looking for the end of a string?\n    if (state.continueString) {\n      // If so, go through the loop again\n      stream.backUp(1);\n      return tokenString(stream, state);\n    }\n    // Are we in a definition (class, node, define)?\n    if (state.inDefinition) {\n      // If so, return def (i.e. for 'class myclass {' ; 'myclass' would be matched)\n      if (stream.match(/(\\s+)?[\\w:_]+(\\s+)?/)) {\n        return 'def';\n      }\n      // Match the rest it the next time around\n      stream.match(/\\s+{/);\n      state.inDefinition = false;\n    }\n    // Are we in an 'include' statement?\n    if (state.inInclude) {\n      // Match and return the included class\n      stream.match(/(\\s+)?\\S+(\\s+)?/);\n      state.inInclude = false;\n      return 'def';\n    }\n    // Do we just have a function on our hands?\n    // In 'ensure_resource(\"myclass\")', 'ensure_resource' is matched\n    if (stream.match(/(\\s+)?\\w+\\(/)) {\n      stream.backUp(1);\n      return 'def';\n    }\n    // Have we matched the prior attribute regex?\n    if (attribute) {\n      stream.match(/(\\s+)?\\w+/);\n      return 'tag';\n    }\n    // Do we have Puppet specific words?\n    if (word && words.hasOwnProperty(word)) {\n      // Negates the initial next()\n      stream.backUp(1);\n      // rs move the stream\n      stream.match(/[\\w]+/);\n      // We want to process these words differently\n      // do to the importance they have in Puppet\n      if (stream.match(/\\s+\\S+\\s+{/, false)) {\n        state.inDefinition = true;\n      }\n      if (word == 'include') {\n        state.inInclude = true;\n      }\n      // Returns their value as state in the prior define methods\n      return words[word];\n    }\n    // Is there a match on a reference?\n    if (/(^|\\s+)[A-Z][\\w:_]+/.test(word)) {\n      // Negate the next()\n      stream.backUp(1);\n      // Match the full reference\n      stream.match(/(^|\\s+)[A-Z][\\w:_]+/);\n      return 'def';\n    }\n    // Have we matched the prior resource regex?\n    if (resource) {\n      stream.match(/(\\s+)?[\\w:_]+/);\n      return 'def';\n    }\n    // Have we matched the prior special_resource regex?\n    if (special_resource) {\n      stream.match(/(\\s+)?[@]{1,2}/);\n      return 'special';\n    }\n    // Match all the comments. All of them.\n    if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n    // Have we found a string?\n    if (ch == \"'\" || ch == '\"') {\n      // Store the type (single or double)\n      state.pending = ch;\n      // Perform the looping function to find the end\n      return tokenString(stream, state);\n    }\n    // Match all the brackets\n    if (ch == '{' || ch == '}') {\n      return 'bracket';\n    }\n    // Match characters that we are going to assume\n    // are trying to be regex\n    if (ch == '/') {\n      stream.match(/^[^\\/]*\\//);\n      return 'variable-3';\n    }\n    // Match all the numbers\n    if (ch.match(/[0-9]/)) {\n      stream.eatWhile(/[0-9]+/);\n      return 'number';\n    }\n    // Match the '=' and '=>' operators\n    if (ch == '=') {\n      if (stream.peek() == '>') {\n          stream.next();\n      }\n      return \"operator\";\n    }\n    // Keep advancing through all the rest\n    stream.eatWhile(/[\\w-]/);\n    // Return a blank line for everything else\n    return null;\n  }\n  // Start it all\n  return {\n    startState: function () {\n      var state = {};\n      state.inDefinition = false;\n      state.inInclude = false;\n      state.continueString = false;\n      state.pending = false;\n      return state;\n    },\n    token: function (stream, state) {\n      // Strip the spaces, but regex will account for them eitherway\n      if (stream.eatSpace()) return null;\n      // Go through the main process\n      return tokenize(stream, state);\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-puppet\", \"puppet\");\n\n});\n"],
  "mappings": "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",
  "names": ["CodeMirror", "define"]
}
