{
  "version": 3,
  "sources": ["../../.pnpm/codemirror@5.65.16/node_modules/codemirror/mode/apl/apl.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"apl\", function() {\n  var builtInOps = {\n    \".\": \"innerProduct\",\n    \"\\\\\": \"scan\",\n    \"/\": \"reduce\",\n    \"⌿\": \"reduce1Axis\",\n    \"⍀\": \"scan1Axis\",\n    \"¨\": \"each\",\n    \"⍣\": \"power\"\n  };\n  var builtInFuncs = {\n    \"+\": [\"conjugate\", \"add\"],\n    \"−\": [\"negate\", \"subtract\"],\n    \"×\": [\"signOf\", \"multiply\"],\n    \"÷\": [\"reciprocal\", \"divide\"],\n    \"⌈\": [\"ceiling\", \"greaterOf\"],\n    \"⌊\": [\"floor\", \"lesserOf\"],\n    \"∣\": [\"absolute\", \"residue\"],\n    \"⍳\": [\"indexGenerate\", \"indexOf\"],\n    \"?\": [\"roll\", \"deal\"],\n    \"⋆\": [\"exponentiate\", \"toThePowerOf\"],\n    \"⍟\": [\"naturalLog\", \"logToTheBase\"],\n    \"○\": [\"piTimes\", \"circularFuncs\"],\n    \"!\": [\"factorial\", \"binomial\"],\n    \"⌹\": [\"matrixInverse\", \"matrixDivide\"],\n    \"<\": [null, \"lessThan\"],\n    \"≤\": [null, \"lessThanOrEqual\"],\n    \"=\": [null, \"equals\"],\n    \">\": [null, \"greaterThan\"],\n    \"≥\": [null, \"greaterThanOrEqual\"],\n    \"≠\": [null, \"notEqual\"],\n    \"≡\": [\"depth\", \"match\"],\n    \"≢\": [null, \"notMatch\"],\n    \"∈\": [\"enlist\", \"membership\"],\n    \"⍷\": [null, \"find\"],\n    \"∪\": [\"unique\", \"union\"],\n    \"∩\": [null, \"intersection\"],\n    \"∼\": [\"not\", \"without\"],\n    \"∨\": [null, \"or\"],\n    \"∧\": [null, \"and\"],\n    \"⍱\": [null, \"nor\"],\n    \"⍲\": [null, \"nand\"],\n    \"⍴\": [\"shapeOf\", \"reshape\"],\n    \",\": [\"ravel\", \"catenate\"],\n    \"⍪\": [null, \"firstAxisCatenate\"],\n    \"⌽\": [\"reverse\", \"rotate\"],\n    \"⊖\": [\"axis1Reverse\", \"axis1Rotate\"],\n    \"⍉\": [\"transpose\", null],\n    \"↑\": [\"first\", \"take\"],\n    \"↓\": [null, \"drop\"],\n    \"⊂\": [\"enclose\", \"partitionWithAxis\"],\n    \"⊃\": [\"diclose\", \"pick\"],\n    \"⌷\": [null, \"index\"],\n    \"⍋\": [\"gradeUp\", null],\n    \"⍒\": [\"gradeDown\", null],\n    \"⊤\": [\"encode\", null],\n    \"⊥\": [\"decode\", null],\n    \"⍕\": [\"format\", \"formatByExample\"],\n    \"⍎\": [\"execute\", null],\n    \"⊣\": [\"stop\", \"left\"],\n    \"⊢\": [\"pass\", \"right\"]\n  };\n\n  var isOperator = /[\\.\\/⌿⍀¨⍣]/;\n  var isNiladic = /⍬/;\n  var isFunction = /[\\+−×÷⌈⌊∣⍳\\?⋆⍟○!⌹<≤=>≥≠≡≢∈⍷∪∩∼∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⌷⍋⍒⊤⊥⍕⍎⊣⊢]/;\n  var isArrow = /←/;\n  var isComment = /[⍝#].*$/;\n\n  var stringEater = function(type) {\n    var prev;\n    prev = false;\n    return function(c) {\n      prev = c;\n      if (c === type) {\n        return prev === \"\\\\\";\n      }\n      return true;\n    };\n  };\n  return {\n    startState: function() {\n      return {\n        prev: false,\n        func: false,\n        op: false,\n        string: false,\n        escape: false\n      };\n    },\n    token: function(stream, state) {\n      var ch, funcName;\n      if (stream.eatSpace()) {\n        return null;\n      }\n      ch = stream.next();\n      if (ch === '\"' || ch === \"'\") {\n        stream.eatWhile(stringEater(ch));\n        stream.next();\n        state.prev = true;\n        return \"string\";\n      }\n      if (/[\\[{\\(]/.test(ch)) {\n        state.prev = false;\n        return null;\n      }\n      if (/[\\]}\\)]/.test(ch)) {\n        state.prev = true;\n        return null;\n      }\n      if (isNiladic.test(ch)) {\n        state.prev = false;\n        return \"niladic\";\n      }\n      if (/[¯\\d]/.test(ch)) {\n        if (state.func) {\n          state.func = false;\n          state.prev = false;\n        } else {\n          state.prev = true;\n        }\n        stream.eatWhile(/[\\w\\.]/);\n        return \"number\";\n      }\n      if (isOperator.test(ch)) {\n        return \"operator apl-\" + builtInOps[ch];\n      }\n      if (isArrow.test(ch)) {\n        return \"apl-arrow\";\n      }\n      if (isFunction.test(ch)) {\n        funcName = \"apl-\";\n        if (builtInFuncs[ch] != null) {\n          if (state.prev) {\n            funcName += builtInFuncs[ch][1];\n          } else {\n            funcName += builtInFuncs[ch][0];\n          }\n        }\n        state.func = true;\n        state.prev = false;\n        return \"function \" + funcName;\n      }\n      if (isComment.test(ch)) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      if (ch === \"∘\" && stream.peek() === \".\") {\n        stream.next();\n        return \"function jot-dot\";\n      }\n      stream.eatWhile(/[\\w\\$_]/);\n      state.prev = true;\n      return \"keyword\";\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/apl\", \"apl\");\n\n});\n"],
  "mappings": "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",
  "names": ["CodeMirror"]
}
