{
  "version": 3,
  "sources": ["../../.pnpm/codemirror@5.65.16/node_modules/codemirror/mode/vhdl/vhdl.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// Originally written by Alf Nielsen, re-written by Michael Zhou\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction words(str) {\n  var obj = {}, words = str.split(\",\");\n  for (var i = 0; i < words.length; ++i) {\n    var allCaps = words[i].toUpperCase();\n    var firstCap = words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    obj[words[i]] = true;\n    obj[allCaps] = true;\n    obj[firstCap] = true;\n  }\n  return obj;\n}\n\nfunction metaHook(stream) {\n  stream.eatWhile(/[\\w\\$_]/);\n  return \"meta\";\n}\n\nCodeMirror.defineMode(\"vhdl\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit,\n      atoms = parserConfig.atoms || words(\"null\"),\n      hooks = parserConfig.hooks || {\"`\": metaHook, \"$\": metaHook},\n      multiLineStrings = parserConfig.multiLineStrings;\n\n  var keywords = words(\"abs,access,after,alias,all,and,architecture,array,assert,attribute,begin,block,\" +\n      \"body,buffer,bus,case,component,configuration,constant,disconnect,downto,else,elsif,end,end block,end case,\" +\n      \"end component,end for,end generate,end if,end loop,end process,end record,end units,entity,exit,file,for,\" +\n      \"function,generate,generic,generic map,group,guarded,if,impure,in,inertial,inout,is,label,library,linkage,\" +\n      \"literal,loop,map,mod,nand,new,next,nor,null,of,on,open,or,others,out,package,package body,port,port map,\" +\n      \"postponed,procedure,process,pure,range,record,register,reject,rem,report,return,rol,ror,select,severity,signal,\" +\n      \"sla,sll,sra,srl,subtype,then,to,transport,type,unaffected,units,until,use,variable,wait,when,while,with,xnor,xor\");\n\n  var blockKeywords = words(\"architecture,entity,begin,case,port,else,elsif,end,for,function,if\");\n\n  var isOperatorChar = /[&|~><!\\)\\(*#%@+\\/=?\\:;}{,\\.\\^\\-\\[\\]]/;\n  var curPunc;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == '\"') {\n      state.tokenize = tokenString2(ch);\n      return state.tokenize(stream, state);\n    }\n    if (ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (/[\\d']/.test(ch)) {\n      stream.eatWhile(/[\\w\\.']/);\n      return \"number\";\n    }\n    if (ch == \"-\") {\n      if (stream.eat(\"-\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_]/);\n    var cur = stream.current();\n    if (keywords.propertyIsEnumerable(cur.toLowerCase())) {\n      if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n      return \"keyword\";\n    }\n    if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"--\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = tokenBase;\n      return \"string\";\n    };\n  }\n  function tokenString2(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"--\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = tokenBase;\n      return \"string-2\";\n    };\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    return state.context = new Context(state.indented, col, type, null, state.context);\n  }\n  function popContext(state) {\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  // Interface\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if ((curPunc == \";\" || curPunc == \":\") && ctx.type == \"statement\") popContext(state);\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (ctx.type == \"}\" || ctx.type == \"top\" || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\n        pushContext(state, stream.column(), \"statement\");\n      state.startOfLine = false;\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), ctx = state.context, closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : indentUnit);\n      else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricChars: \"{}\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-vhdl\", \"vhdl\");\n\n});\n"],
  "mappings": "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",
  "names": ["CodeMirror", "words"]
}
