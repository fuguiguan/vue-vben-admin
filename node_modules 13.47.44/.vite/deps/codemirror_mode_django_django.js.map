{
  "version": 3,
  "sources": ["../../.pnpm/codemirror@5.65.16/node_modules/codemirror/mode/django/django.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"),\n        require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\",\n            \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"django:inner\", function() {\n    var keywords = [\"block\", \"endblock\", \"for\", \"endfor\", \"true\", \"false\", \"filter\", \"endfilter\",\n                    \"loop\", \"none\", \"self\", \"super\", \"if\", \"elif\", \"endif\", \"as\", \"else\", \"import\",\n                    \"with\", \"endwith\", \"without\", \"context\", \"ifequal\", \"endifequal\", \"ifnotequal\",\n                    \"endifnotequal\", \"extends\", \"include\", \"load\", \"comment\", \"endcomment\",\n                    \"empty\", \"url\", \"static\", \"trans\", \"blocktrans\", \"endblocktrans\", \"now\",\n                    \"regroup\", \"lorem\", \"ifchanged\", \"endifchanged\", \"firstof\", \"debug\", \"cycle\",\n                    \"csrf_token\", \"autoescape\", \"endautoescape\", \"spaceless\", \"endspaceless\",\n                    \"ssi\", \"templatetag\", \"verbatim\", \"endverbatim\", \"widthratio\"],\n        filters = [\"add\", \"addslashes\", \"capfirst\", \"center\", \"cut\", \"date\",\n                   \"default\", \"default_if_none\", \"dictsort\",\n                   \"dictsortreversed\", \"divisibleby\", \"escape\", \"escapejs\",\n                   \"filesizeformat\", \"first\", \"floatformat\", \"force_escape\",\n                   \"get_digit\", \"iriencode\", \"join\", \"last\", \"length\",\n                   \"length_is\", \"linebreaks\", \"linebreaksbr\", \"linenumbers\",\n                   \"ljust\", \"lower\", \"make_list\", \"phone2numeric\", \"pluralize\",\n                   \"pprint\", \"random\", \"removetags\", \"rjust\", \"safe\",\n                   \"safeseq\", \"slice\", \"slugify\", \"stringformat\", \"striptags\",\n                   \"time\", \"timesince\", \"timeuntil\", \"title\", \"truncatechars\",\n                   \"truncatechars_html\", \"truncatewords\", \"truncatewords_html\",\n                   \"unordered_list\", \"upper\", \"urlencode\", \"urlize\",\n                   \"urlizetrunc\", \"wordcount\", \"wordwrap\", \"yesno\"],\n        operators = [\"==\", \"!=\", \"<\", \">\", \"<=\", \">=\"],\n        wordOperators = [\"in\", \"not\", \"or\", \"and\"];\n\n    keywords = new RegExp(\"^\\\\b(\" + keywords.join(\"|\") + \")\\\\b\");\n    filters = new RegExp(\"^\\\\b(\" + filters.join(\"|\") + \")\\\\b\");\n    operators = new RegExp(\"^\\\\b(\" + operators.join(\"|\") + \")\\\\b\");\n    wordOperators = new RegExp(\"^\\\\b(\" + wordOperators.join(\"|\") + \")\\\\b\");\n\n    // We have to return \"null\" instead of null, in order to avoid string\n    // styling as the default, when using Django templates inside HTML\n    // element attributes\n    function tokenBase (stream, state) {\n      // Attempt to identify a variable, template or comment tag respectively\n      if (stream.match(\"{{\")) {\n        state.tokenize = inVariable;\n        return \"tag\";\n      } else if (stream.match(\"{%\")) {\n        state.tokenize = inTag;\n        return \"tag\";\n      } else if (stream.match(\"{#\")) {\n        state.tokenize = inComment;\n        return \"comment\";\n      }\n\n      // Ignore completely any stream series that do not match the\n      // Django template opening tags.\n      while (stream.next() != null && !stream.match(/\\{[{%#]/, false)) {}\n      return null;\n    }\n\n    // A string can be included in either single or double quotes (this is\n    // the delimiter). Mark everything as a string until the start delimiter\n    // occurs again.\n    function inString (delimiter, previousTokenizer) {\n      return function (stream, state) {\n        if (!state.escapeNext && stream.eat(delimiter)) {\n          state.tokenize = previousTokenizer;\n        } else {\n          if (state.escapeNext) {\n            state.escapeNext = false;\n          }\n\n          var ch = stream.next();\n\n          // Take into account the backslash for escaping characters, such as\n          // the string delimiter.\n          if (ch == \"\\\\\") {\n            state.escapeNext = true;\n          }\n        }\n\n        return \"string\";\n      };\n    }\n\n    // Apply Django template variable syntax highlighting\n    function inVariable (stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        }\n\n        // Dot followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for property.\");\n        }\n      }\n\n      // Attempt to match a pipe that precedes a filter\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        }\n\n        // Pipe followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for filter.\");\n        }\n      }\n\n      // Highlight properties\n      if (state.waitProperty) {\n        state.waitProperty = false;\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true;  // A property can be followed by another property\n          state.waitPipe = true;  // A property can be followed by a filter\n          return \"property\";\n        }\n      }\n\n      // Highlight filters\n      if (state.waitFilter) {\n          state.waitFilter = false;\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      }\n\n      // Ignore all white spaces\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      }\n\n      // Identify numbers\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      }\n\n      // Identify strings\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      }\n\n      // Attempt to find the variable\n      if (stream.match(/\\b(\\w+)\\b/) && !state.foundVariable) {\n        state.waitDot = true;\n        state.waitPipe = true;  // A property can be followed by a filter\n        return \"variable\";\n      }\n\n      // If found closing tag reset\n      if (stream.match(\"}}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        state.tokenize = tokenBase;\n        return \"tag\";\n      }\n\n      // If nothing was found, advance to the next character\n      stream.next();\n      return \"null\";\n    }\n\n    function inTag (stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        }\n\n        // Dot followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for property.\");\n        }\n      }\n\n      // Attempt to match a pipe that precedes a filter\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        }\n\n        // Pipe followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for filter.\");\n        }\n      }\n\n      // Highlight properties\n      if (state.waitProperty) {\n        state.waitProperty = false;\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true;  // A property can be followed by another property\n          state.waitPipe = true;  // A property can be followed by a filter\n          return \"property\";\n        }\n      }\n\n      // Highlight filters\n      if (state.waitFilter) {\n          state.waitFilter = false;\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      }\n\n      // Ignore all white spaces\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      }\n\n      // Identify numbers\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      }\n\n      // Identify strings\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      }\n\n      // Attempt to match an operator\n      if (stream.match(operators)) {\n        return \"operator\";\n      }\n\n      // Attempt to match a word operator\n      if (stream.match(wordOperators)) {\n        return \"keyword\";\n      }\n\n      // Attempt to match a keyword\n      var keywordMatch = stream.match(keywords);\n      if (keywordMatch) {\n        if (keywordMatch[0] == \"comment\") {\n          state.blockCommentTag = true;\n        }\n        return \"keyword\";\n      }\n\n      // Attempt to match a variable\n      if (stream.match(/\\b(\\w+)\\b/)) {\n        state.waitDot = true;\n        state.waitPipe = true;  // A property can be followed by a filter\n        return \"variable\";\n      }\n\n      // If found closing tag reset\n      if (stream.match(\"%}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        // If the tag that closes is a block comment tag, we want to mark the\n        // following code as comment, until the tag closes.\n        if (state.blockCommentTag) {\n          state.blockCommentTag = false;  // Release the \"lock\"\n          state.tokenize = inBlockComment;\n        } else {\n          state.tokenize = tokenBase;\n        }\n        return \"tag\";\n      }\n\n      // If nothing was found, advance to the next character\n      stream.next();\n      return \"null\";\n    }\n\n    // Mark everything as comment inside the tag and the tag itself.\n    function inComment (stream, state) {\n      if (stream.match(/^.*?#\\}/)) state.tokenize = tokenBase\n      else stream.skipToEnd()\n      return \"comment\";\n    }\n\n    // Mark everything as a comment until the `blockcomment` tag closes.\n    function inBlockComment (stream, state) {\n      if (stream.match(/\\{%\\s*endcomment\\s*%\\}/, false)) {\n        state.tokenize = inTag;\n        stream.match(\"{%\");\n        return \"tag\";\n      } else {\n        stream.next();\n        return \"comment\";\n      }\n    }\n\n    return {\n      startState: function () {\n        return {tokenize: tokenBase};\n      },\n      token: function (stream, state) {\n        return state.tokenize(stream, state);\n      },\n      blockCommentStart: \"{% comment %}\",\n      blockCommentEnd: \"{% endcomment %}\"\n    };\n  });\n\n  CodeMirror.defineMode(\"django\", function(config) {\n    var htmlBase = CodeMirror.getMode(config, \"text/html\");\n    var djangoInner = CodeMirror.getMode(config, \"django:inner\");\n    return CodeMirror.overlayMode(htmlBase, djangoInner);\n  });\n\n  CodeMirror.defineMIME(\"text/x-django\", \"django\");\n});\n"],
  "mappings": "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",
  "names": ["CodeMirror"]
}
