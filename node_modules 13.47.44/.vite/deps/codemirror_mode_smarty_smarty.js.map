{
  "version": 3,
  "sources": ["../../.pnpm/codemirror@5.65.16/node_modules/codemirror/mode/smarty/smarty.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n/**\n * Smarty 2 and 3 mode.\n */\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"smarty\", function(config, parserConf) {\n    var rightDelimiter = parserConf.rightDelimiter || \"}\";\n    var leftDelimiter = parserConf.leftDelimiter || \"{\";\n    var version = parserConf.version || 2;\n    var baseMode = CodeMirror.getMode(config, parserConf.baseMode || \"null\");\n\n    var keyFunctions = [\"debug\", \"extends\", \"function\", \"include\", \"literal\"];\n    var regs = {\n      operatorChars: /[+\\-*&%=<>!?]/,\n      validIdentifier: /[a-zA-Z0-9_]/,\n      stringChar: /['\"]/\n    };\n\n    var last;\n    function cont(style, lastType) {\n      last = lastType;\n      return style;\n    }\n\n    function chain(stream, state, parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    // Smarty 3 allows { and } surrounded by whitespace to NOT slip into Smarty mode\n    function doesNotCount(stream, pos) {\n      if (pos == null) pos = stream.pos;\n      return version === 3 && leftDelimiter == \"{\" &&\n        (pos == stream.string.length || /\\s/.test(stream.string.charAt(pos)));\n    }\n\n    function tokenTop(stream, state) {\n      var string = stream.string;\n      for (var scan = stream.pos;;) {\n        var nextMatch = string.indexOf(leftDelimiter, scan);\n        scan = nextMatch + leftDelimiter.length;\n        if (nextMatch == -1 || !doesNotCount(stream, nextMatch + leftDelimiter.length)) break;\n      }\n      if (nextMatch == stream.pos) {\n        stream.match(leftDelimiter);\n        if (stream.eat(\"*\")) {\n          return chain(stream, state, tokenBlock(\"comment\", \"*\" + rightDelimiter));\n        } else {\n          state.depth++;\n          state.tokenize = tokenSmarty;\n          last = \"startTag\";\n          return \"tag\";\n        }\n      }\n\n      if (nextMatch > -1) stream.string = string.slice(0, nextMatch);\n      var token = baseMode.token(stream, state.base);\n      if (nextMatch > -1) stream.string = string;\n      return token;\n    }\n\n    // parsing Smarty content\n    function tokenSmarty(stream, state) {\n      if (stream.match(rightDelimiter, true)) {\n        if (version === 3) {\n          state.depth--;\n          if (state.depth <= 0) {\n            state.tokenize = tokenTop;\n          }\n        } else {\n          state.tokenize = tokenTop;\n        }\n        return cont(\"tag\", null);\n      }\n\n      if (stream.match(leftDelimiter, true)) {\n        state.depth++;\n        return cont(\"tag\", \"startTag\");\n      }\n\n      var ch = stream.next();\n      if (ch == \"$\") {\n        stream.eatWhile(regs.validIdentifier);\n        return cont(\"variable-2\", \"variable\");\n      } else if (ch == \"|\") {\n        return cont(\"operator\", \"pipe\");\n      } else if (ch == \".\") {\n        return cont(\"operator\", \"property\");\n      } else if (regs.stringChar.test(ch)) {\n        state.tokenize = tokenAttribute(ch);\n        return cont(\"string\", \"string\");\n      } else if (regs.operatorChars.test(ch)) {\n        stream.eatWhile(regs.operatorChars);\n        return cont(\"operator\", \"operator\");\n      } else if (ch == \"[\" || ch == \"]\") {\n        return cont(\"bracket\", \"bracket\");\n      } else if (ch == \"(\" || ch == \")\") {\n        return cont(\"bracket\", \"operator\");\n      } else if (/\\d/.test(ch)) {\n        stream.eatWhile(/\\d/);\n        return cont(\"number\", \"number\");\n      } else {\n\n        if (state.last == \"variable\") {\n          if (ch == \"@\") {\n            stream.eatWhile(regs.validIdentifier);\n            return cont(\"property\", \"property\");\n          } else if (ch == \"|\") {\n            stream.eatWhile(regs.validIdentifier);\n            return cont(\"qualifier\", \"modifier\");\n          }\n        } else if (state.last == \"pipe\") {\n          stream.eatWhile(regs.validIdentifier);\n          return cont(\"qualifier\", \"modifier\");\n        } else if (state.last == \"whitespace\") {\n          stream.eatWhile(regs.validIdentifier);\n          return cont(\"attribute\", \"modifier\");\n        } if (state.last == \"property\") {\n          stream.eatWhile(regs.validIdentifier);\n          return cont(\"property\", null);\n        } else if (/\\s/.test(ch)) {\n          last = \"whitespace\";\n          return null;\n        }\n\n        var str = \"\";\n        if (ch != \"/\") {\n          str += ch;\n        }\n        var c = null;\n        while (c = stream.eat(regs.validIdentifier)) {\n          str += c;\n        }\n        for (var i=0, j=keyFunctions.length; i<j; i++) {\n          if (keyFunctions[i] == str) {\n            return cont(\"keyword\", \"keyword\");\n          }\n        }\n        if (/\\s/.test(ch)) {\n          return null;\n        }\n        return cont(\"tag\", \"tag\");\n      }\n    }\n\n    function tokenAttribute(quote) {\n      return function(stream, state) {\n        var prevChar = null;\n        var currChar = null;\n        while (!stream.eol()) {\n          currChar = stream.peek();\n          if (stream.next() == quote && prevChar !== '\\\\') {\n            state.tokenize = tokenSmarty;\n            break;\n          }\n          prevChar = currChar;\n        }\n        return \"string\";\n      };\n    }\n\n    function tokenBlock(style, terminator) {\n      return function(stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = tokenTop;\n            break;\n          }\n          stream.next();\n        }\n        return style;\n      };\n    }\n\n    return {\n      startState: function() {\n        return {\n          base: CodeMirror.startState(baseMode),\n          tokenize: tokenTop,\n          last: null,\n          depth: 0\n        };\n      },\n      copyState: function(state) {\n        return {\n          base: CodeMirror.copyState(baseMode, state.base),\n          tokenize: state.tokenize,\n          last: state.last,\n          depth: state.depth\n        };\n      },\n      innerMode: function(state) {\n        if (state.tokenize == tokenTop)\n          return {mode: baseMode, state: state.base};\n      },\n      token: function(stream, state) {\n        var style = state.tokenize(stream, state);\n        state.last = last;\n        return style;\n      },\n      indent: function(state, text, line) {\n        if (state.tokenize == tokenTop && baseMode.indent)\n          return baseMode.indent(state.base, text, line);\n        else\n          return CodeMirror.Pass;\n      },\n      blockCommentStart: leftDelimiter + \"*\",\n      blockCommentEnd: \"*\" + rightDelimiter\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-smarty\", \"smarty\");\n});\n"],
  "mappings": "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",
  "names": ["CodeMirror"]
}
