{
  "version": 3,
  "sources": ["../../.pnpm/codemirror@5.65.16/node_modules/codemirror/mode/pug/pug.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../javascript/javascript\"), require(\"../css/css\"), require(\"../htmlmixed/htmlmixed\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../javascript/javascript\", \"../css/css\", \"../htmlmixed/htmlmixed\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"pug\", function (config) {\n  // token types\n  var KEYWORD = 'keyword';\n  var DOCTYPE = 'meta';\n  var ID = 'builtin';\n  var CLASS = 'qualifier';\n\n  var ATTRS_NEST = {\n    '{': '}',\n    '(': ')',\n    '[': ']'\n  };\n\n  var jsMode = CodeMirror.getMode(config, 'javascript');\n\n  function State() {\n    this.javaScriptLine = false;\n    this.javaScriptLineExcludesColon = false;\n\n    this.javaScriptArguments = false;\n    this.javaScriptArgumentsDepth = 0;\n\n    this.isInterpolating = false;\n    this.interpolationNesting = 0;\n\n    this.jsState = CodeMirror.startState(jsMode);\n\n    this.restOfLine = '';\n\n    this.isIncludeFiltered = false;\n    this.isEach = false;\n\n    this.lastTag = '';\n    this.scriptType = '';\n\n    // Attributes Mode\n    this.isAttrs = false;\n    this.attrsNest = [];\n    this.inAttributeName = true;\n    this.attributeIsType = false;\n    this.attrValue = '';\n\n    // Indented Mode\n    this.indentOf = Infinity;\n    this.indentToken = '';\n\n    this.innerMode = null;\n    this.innerState = null;\n\n    this.innerModeForLine = false;\n  }\n  /**\n   * Safely copy a state\n   *\n   * @return {State}\n   */\n  State.prototype.copy = function () {\n    var res = new State();\n    res.javaScriptLine = this.javaScriptLine;\n    res.javaScriptLineExcludesColon = this.javaScriptLineExcludesColon;\n    res.javaScriptArguments = this.javaScriptArguments;\n    res.javaScriptArgumentsDepth = this.javaScriptArgumentsDepth;\n    res.isInterpolating = this.isInterpolating;\n    res.interpolationNesting = this.interpolationNesting;\n\n    res.jsState = CodeMirror.copyState(jsMode, this.jsState);\n\n    res.innerMode = this.innerMode;\n    if (this.innerMode && this.innerState) {\n      res.innerState = CodeMirror.copyState(this.innerMode, this.innerState);\n    }\n\n    res.restOfLine = this.restOfLine;\n\n    res.isIncludeFiltered = this.isIncludeFiltered;\n    res.isEach = this.isEach;\n    res.lastTag = this.lastTag;\n    res.scriptType = this.scriptType;\n    res.isAttrs = this.isAttrs;\n    res.attrsNest = this.attrsNest.slice();\n    res.inAttributeName = this.inAttributeName;\n    res.attributeIsType = this.attributeIsType;\n    res.attrValue = this.attrValue;\n    res.indentOf = this.indentOf;\n    res.indentToken = this.indentToken;\n\n    res.innerModeForLine = this.innerModeForLine;\n\n    return res;\n  };\n\n  function javaScript(stream, state) {\n    if (stream.sol()) {\n      // if javaScriptLine was set at end of line, ignore it\n      state.javaScriptLine = false;\n      state.javaScriptLineExcludesColon = false;\n    }\n    if (state.javaScriptLine) {\n      if (state.javaScriptLineExcludesColon && stream.peek() === ':') {\n        state.javaScriptLine = false;\n        state.javaScriptLineExcludesColon = false;\n        return;\n      }\n      var tok = jsMode.token(stream, state.jsState);\n      if (stream.eol()) state.javaScriptLine = false;\n      return tok || true;\n    }\n  }\n  function javaScriptArguments(stream, state) {\n    if (state.javaScriptArguments) {\n      if (state.javaScriptArgumentsDepth === 0 && stream.peek() !== '(') {\n        state.javaScriptArguments = false;\n        return;\n      }\n      if (stream.peek() === '(') {\n        state.javaScriptArgumentsDepth++;\n      } else if (stream.peek() === ')') {\n        state.javaScriptArgumentsDepth--;\n      }\n      if (state.javaScriptArgumentsDepth === 0) {\n        state.javaScriptArguments = false;\n        return;\n      }\n\n      var tok = jsMode.token(stream, state.jsState);\n      return tok || true;\n    }\n  }\n\n  function yieldStatement(stream) {\n    if (stream.match(/^yield\\b/)) {\n        return 'keyword';\n    }\n  }\n\n  function doctype(stream) {\n    if (stream.match(/^(?:doctype) *([^\\n]+)?/)) {\n        return DOCTYPE;\n    }\n  }\n\n  function interpolation(stream, state) {\n    if (stream.match('#{')) {\n      state.isInterpolating = true;\n      state.interpolationNesting = 0;\n      return 'punctuation';\n    }\n  }\n\n  function interpolationContinued(stream, state) {\n    if (state.isInterpolating) {\n      if (stream.peek() === '}') {\n        state.interpolationNesting--;\n        if (state.interpolationNesting < 0) {\n          stream.next();\n          state.isInterpolating = false;\n          return 'punctuation';\n        }\n      } else if (stream.peek() === '{') {\n        state.interpolationNesting++;\n      }\n      return jsMode.token(stream, state.jsState) || true;\n    }\n  }\n\n  function caseStatement(stream, state) {\n    if (stream.match(/^case\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function when(stream, state) {\n    if (stream.match(/^when\\b/)) {\n      state.javaScriptLine = true;\n      state.javaScriptLineExcludesColon = true;\n      return KEYWORD;\n    }\n  }\n\n  function defaultStatement(stream) {\n    if (stream.match(/^default\\b/)) {\n      return KEYWORD;\n    }\n  }\n\n  function extendsStatement(stream, state) {\n    if (stream.match(/^extends?\\b/)) {\n      state.restOfLine = 'string';\n      return KEYWORD;\n    }\n  }\n\n  function append(stream, state) {\n    if (stream.match(/^append\\b/)) {\n      state.restOfLine = 'variable';\n      return KEYWORD;\n    }\n  }\n  function prepend(stream, state) {\n    if (stream.match(/^prepend\\b/)) {\n      state.restOfLine = 'variable';\n      return KEYWORD;\n    }\n  }\n  function block(stream, state) {\n    if (stream.match(/^block\\b *(?:(prepend|append)\\b)?/)) {\n      state.restOfLine = 'variable';\n      return KEYWORD;\n    }\n  }\n\n  function include(stream, state) {\n    if (stream.match(/^include\\b/)) {\n      state.restOfLine = 'string';\n      return KEYWORD;\n    }\n  }\n\n  function includeFiltered(stream, state) {\n    if (stream.match(/^include:([a-zA-Z0-9\\-]+)/, false) && stream.match('include')) {\n      state.isIncludeFiltered = true;\n      return KEYWORD;\n    }\n  }\n\n  function includeFilteredContinued(stream, state) {\n    if (state.isIncludeFiltered) {\n      var tok = filter(stream, state);\n      state.isIncludeFiltered = false;\n      state.restOfLine = 'string';\n      return tok;\n    }\n  }\n\n  function mixin(stream, state) {\n    if (stream.match(/^mixin\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function call(stream, state) {\n    if (stream.match(/^\\+([-\\w]+)/)) {\n      if (!stream.match(/^\\( *[-\\w]+ *=/, false)) {\n        state.javaScriptArguments = true;\n        state.javaScriptArgumentsDepth = 0;\n      }\n      return 'variable';\n    }\n    if (stream.match('+#{', false)) {\n      stream.next();\n      state.mixinCallAfter = true;\n      return interpolation(stream, state);\n    }\n  }\n  function callArguments(stream, state) {\n    if (state.mixinCallAfter) {\n      state.mixinCallAfter = false;\n      if (!stream.match(/^\\( *[-\\w]+ *=/, false)) {\n        state.javaScriptArguments = true;\n        state.javaScriptArgumentsDepth = 0;\n      }\n      return true;\n    }\n  }\n\n  function conditional(stream, state) {\n    if (stream.match(/^(if|unless|else if|else)\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function each(stream, state) {\n    if (stream.match(/^(- *)?(each|for)\\b/)) {\n      state.isEach = true;\n      return KEYWORD;\n    }\n  }\n  function eachContinued(stream, state) {\n    if (state.isEach) {\n      if (stream.match(/^ in\\b/)) {\n        state.javaScriptLine = true;\n        state.isEach = false;\n        return KEYWORD;\n      } else if (stream.sol() || stream.eol()) {\n        state.isEach = false;\n      } else if (stream.next()) {\n        while (!stream.match(/^ in\\b/, false) && stream.next());\n        return 'variable';\n      }\n    }\n  }\n\n  function whileStatement(stream, state) {\n    if (stream.match(/^while\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function tag(stream, state) {\n    var captures;\n    if (captures = stream.match(/^(\\w(?:[-:\\w]*\\w)?)\\/?/)) {\n      state.lastTag = captures[1].toLowerCase();\n      if (state.lastTag === 'script') {\n        state.scriptType = 'application/javascript';\n      }\n      return 'tag';\n    }\n  }\n\n  function filter(stream, state) {\n    if (stream.match(/^:([\\w\\-]+)/)) {\n      var innerMode;\n      if (config && config.innerModes) {\n        innerMode = config.innerModes(stream.current().substring(1));\n      }\n      if (!innerMode) {\n        innerMode = stream.current().substring(1);\n      }\n      if (typeof innerMode === 'string') {\n        innerMode = CodeMirror.getMode(config, innerMode);\n      }\n      setInnerMode(stream, state, innerMode);\n      return 'atom';\n    }\n  }\n\n  function code(stream, state) {\n    if (stream.match(/^(!?=|-)/)) {\n      state.javaScriptLine = true;\n      return 'punctuation';\n    }\n  }\n\n  function id(stream) {\n    if (stream.match(/^#([\\w-]+)/)) {\n      return ID;\n    }\n  }\n\n  function className(stream) {\n    if (stream.match(/^\\.([\\w-]+)/)) {\n      return CLASS;\n    }\n  }\n\n  function attrs(stream, state) {\n    if (stream.peek() == '(') {\n      stream.next();\n      state.isAttrs = true;\n      state.attrsNest = [];\n      state.inAttributeName = true;\n      state.attrValue = '';\n      state.attributeIsType = false;\n      return 'punctuation';\n    }\n  }\n\n  function attrsContinued(stream, state) {\n    if (state.isAttrs) {\n      if (ATTRS_NEST[stream.peek()]) {\n        state.attrsNest.push(ATTRS_NEST[stream.peek()]);\n      }\n      if (state.attrsNest[state.attrsNest.length - 1] === stream.peek()) {\n        state.attrsNest.pop();\n      } else  if (stream.eat(')')) {\n        state.isAttrs = false;\n        return 'punctuation';\n      }\n      if (state.inAttributeName && stream.match(/^[^=,\\)!]+/)) {\n        if (stream.peek() === '=' || stream.peek() === '!') {\n          state.inAttributeName = false;\n          state.jsState = CodeMirror.startState(jsMode);\n          if (state.lastTag === 'script' && stream.current().trim().toLowerCase() === 'type') {\n            state.attributeIsType = true;\n          } else {\n            state.attributeIsType = false;\n          }\n        }\n        return 'attribute';\n      }\n\n      var tok = jsMode.token(stream, state.jsState);\n      if (state.attributeIsType && tok === 'string') {\n        state.scriptType = stream.current().toString();\n      }\n      if (state.attrsNest.length === 0 && (tok === 'string' || tok === 'variable' || tok === 'keyword')) {\n        try {\n          Function('', 'var x ' + state.attrValue.replace(/,\\s*$/, '').replace(/^!/, ''));\n          state.inAttributeName = true;\n          state.attrValue = '';\n          stream.backUp(stream.current().length);\n          return attrsContinued(stream, state);\n        } catch (ex) {\n          //not the end of an attribute\n        }\n      }\n      state.attrValue += stream.current();\n      return tok || true;\n    }\n  }\n\n  function attributesBlock(stream, state) {\n    if (stream.match(/^&attributes\\b/)) {\n      state.javaScriptArguments = true;\n      state.javaScriptArgumentsDepth = 0;\n      return 'keyword';\n    }\n  }\n\n  function indent(stream) {\n    if (stream.sol() && stream.eatSpace()) {\n      return 'indent';\n    }\n  }\n\n  function comment(stream, state) {\n    if (stream.match(/^ *\\/\\/(-)?([^\\n]*)/)) {\n      state.indentOf = stream.indentation();\n      state.indentToken = 'comment';\n      return 'comment';\n    }\n  }\n\n  function colon(stream) {\n    if (stream.match(/^: */)) {\n      return 'colon';\n    }\n  }\n\n  function text(stream, state) {\n    if (stream.match(/^(?:\\| ?| )([^\\n]+)/)) {\n      return 'string';\n    }\n    if (stream.match(/^(<[^\\n]*)/, false)) {\n      // html string\n      setInnerMode(stream, state, 'htmlmixed');\n      state.innerModeForLine = true;\n      return innerMode(stream, state, true);\n    }\n  }\n\n  function dot(stream, state) {\n    if (stream.eat('.')) {\n      var innerMode = null;\n      if (state.lastTag === 'script' && state.scriptType.toLowerCase().indexOf('javascript') != -1) {\n        innerMode = state.scriptType.toLowerCase().replace(/\"|'/g, '');\n      } else if (state.lastTag === 'style') {\n        innerMode = 'css';\n      }\n      setInnerMode(stream, state, innerMode);\n      return 'dot';\n    }\n  }\n\n  function fail(stream) {\n    stream.next();\n    return null;\n  }\n\n\n  function setInnerMode(stream, state, mode) {\n    mode = CodeMirror.mimeModes[mode] || mode;\n    mode = config.innerModes ? config.innerModes(mode) || mode : mode;\n    mode = CodeMirror.mimeModes[mode] || mode;\n    mode = CodeMirror.getMode(config, mode);\n    state.indentOf = stream.indentation();\n\n    if (mode && mode.name !== 'null') {\n      state.innerMode = mode;\n    } else {\n      state.indentToken = 'string';\n    }\n  }\n  function innerMode(stream, state, force) {\n    if (stream.indentation() > state.indentOf || (state.innerModeForLine && !stream.sol()) || force) {\n      if (state.innerMode) {\n        if (!state.innerState) {\n          state.innerState = state.innerMode.startState ? CodeMirror.startState(state.innerMode, stream.indentation()) : {};\n        }\n        return stream.hideFirstChars(state.indentOf + 2, function () {\n          return state.innerMode.token(stream, state.innerState) || true;\n        });\n      } else {\n        stream.skipToEnd();\n        return state.indentToken;\n      }\n    } else if (stream.sol()) {\n      state.indentOf = Infinity;\n      state.indentToken = null;\n      state.innerMode = null;\n      state.innerState = null;\n    }\n  }\n  function restOfLine(stream, state) {\n    if (stream.sol()) {\n      // if restOfLine was set at end of line, ignore it\n      state.restOfLine = '';\n    }\n    if (state.restOfLine) {\n      stream.skipToEnd();\n      var tok = state.restOfLine;\n      state.restOfLine = '';\n      return tok;\n    }\n  }\n\n\n  function startState() {\n    return new State();\n  }\n  function copyState(state) {\n    return state.copy();\n  }\n  /**\n   * Get the next token in the stream\n   *\n   * @param {Stream} stream\n   * @param {State} state\n   */\n  function nextToken(stream, state) {\n    var tok = innerMode(stream, state)\n      || restOfLine(stream, state)\n      || interpolationContinued(stream, state)\n      || includeFilteredContinued(stream, state)\n      || eachContinued(stream, state)\n      || attrsContinued(stream, state)\n      || javaScript(stream, state)\n      || javaScriptArguments(stream, state)\n      || callArguments(stream, state)\n\n      || yieldStatement(stream)\n      || doctype(stream)\n      || interpolation(stream, state)\n      || caseStatement(stream, state)\n      || when(stream, state)\n      || defaultStatement(stream)\n      || extendsStatement(stream, state)\n      || append(stream, state)\n      || prepend(stream, state)\n      || block(stream, state)\n      || include(stream, state)\n      || includeFiltered(stream, state)\n      || mixin(stream, state)\n      || call(stream, state)\n      || conditional(stream, state)\n      || each(stream, state)\n      || whileStatement(stream, state)\n      || tag(stream, state)\n      || filter(stream, state)\n      || code(stream, state)\n      || id(stream)\n      || className(stream)\n      || attrs(stream, state)\n      || attributesBlock(stream, state)\n      || indent(stream)\n      || text(stream, state)\n      || comment(stream, state)\n      || colon(stream)\n      || dot(stream, state)\n      || fail(stream);\n\n    return tok === true ? null : tok;\n  }\n  return {\n    startState: startState,\n    copyState: copyState,\n    token: nextToken\n  };\n}, 'javascript', 'css', 'htmlmixed');\n\nCodeMirror.defineMIME('text/x-pug', 'pug');\nCodeMirror.defineMIME('text/x-jade', 'pug');\n\n});\n"],
  "mappings": "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",
  "names": ["CodeMirror", "innerMode"]
}
