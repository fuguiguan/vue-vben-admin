{
  "version": 3,
  "sources": ["../../.pnpm/codemirror@5.65.16/node_modules/codemirror/mode/stylus/stylus.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// Stylus mode created by Dmitry Kiselyov http://git.io/AaRB\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"stylus\", function(config) {\n    var indentUnit = config.indentUnit,\n        indentUnitString = '',\n        tagKeywords = keySet(tagKeywords_),\n        tagVariablesRegexp = /^(a|b|i|s|col|em)$/i,\n        propertyKeywords = keySet(propertyKeywords_),\n        nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_),\n        valueKeywords = keySet(valueKeywords_),\n        colorKeywords = keySet(colorKeywords_),\n        documentTypes = keySet(documentTypes_),\n        documentTypesRegexp = wordRegexp(documentTypes_),\n        mediaFeatures = keySet(mediaFeatures_),\n        mediaTypes = keySet(mediaTypes_),\n        fontProperties = keySet(fontProperties_),\n        operatorsRegexp = /^\\s*([.]{2,3}|&&|\\|\\||\\*\\*|[?!=:]?=|[-+*\\/%<>]=?|\\?:|\\~)/,\n        wordOperatorKeywordsRegexp = wordRegexp(wordOperatorKeywords_),\n        blockKeywords = keySet(blockKeywords_),\n        vendorPrefixesRegexp = new RegExp(/^\\-(moz|ms|o|webkit)-/i),\n        commonAtoms = keySet(commonAtoms_),\n        firstWordMatch = \"\",\n        states = {},\n        ch,\n        style,\n        type,\n        override;\n\n    while (indentUnitString.length < indentUnit) indentUnitString += ' ';\n\n    /**\n     * Tokenizers\n     */\n    function tokenBase(stream, state) {\n      firstWordMatch = stream.string.match(/(^[\\w-]+\\s*=\\s*$)|(^\\s*[\\w-]+\\s*=\\s*[\\w-])|(^\\s*(\\.|#|@|\\$|\\&|\\[|\\d|\\+|::?|\\{|\\>|~|\\/)?\\s*[\\w-]*([a-z0-9-]|\\*|\\/\\*)(\\(|,)?)/);\n      state.context.line.firstWord = firstWordMatch ? firstWordMatch[0].replace(/^\\s*/, \"\") : \"\";\n      state.context.line.indent = stream.indentation();\n      ch = stream.peek();\n\n      // Line comment\n      if (stream.match(\"//\")) {\n        stream.skipToEnd();\n        return [\"comment\", \"comment\"];\n      }\n      // Block comment\n      if (stream.match(\"/*\")) {\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      }\n      // String\n      if (ch == \"\\\"\" || ch == \"'\") {\n        stream.next();\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      }\n      // Def\n      if (ch == \"@\") {\n        stream.next();\n        stream.eatWhile(/[\\w\\\\-]/);\n        return [\"def\", stream.current()];\n      }\n      // ID selector or Hex color\n      if (ch == \"#\") {\n        stream.next();\n        // Hex color\n        if (stream.match(/^[0-9a-f]{3}([0-9a-f]([0-9a-f]{2}){0,2})?\\b(?!-)/i)) {\n          return [\"atom\", \"atom\"];\n        }\n        // ID selector\n        if (stream.match(/^[a-z][\\w-]*/i)) {\n          return [\"builtin\", \"hash\"];\n        }\n      }\n      // Vendor prefixes\n      if (stream.match(vendorPrefixesRegexp)) {\n        return [\"meta\", \"vendor-prefixes\"];\n      }\n      // Numbers\n      if (stream.match(/^-?[0-9]?\\.?[0-9]/)) {\n        stream.eatWhile(/[a-z%]/i);\n        return [\"number\", \"unit\"];\n      }\n      // !important|optional\n      if (ch == \"!\") {\n        stream.next();\n        return [stream.match(/^(important|optional)/i) ? \"keyword\": \"operator\", \"important\"];\n      }\n      // Class\n      if (ch == \".\" && stream.match(/^\\.[a-z][\\w-]*/i)) {\n        return [\"qualifier\", \"qualifier\"];\n      }\n      // url url-prefix domain regexp\n      if (stream.match(documentTypesRegexp)) {\n        if (stream.peek() == \"(\") state.tokenize = tokenParenthesized;\n        return [\"property\", \"word\"];\n      }\n      // Mixins / Functions\n      if (stream.match(/^[a-z][\\w-]*\\(/i)) {\n        stream.backUp(1);\n        return [\"keyword\", \"mixin\"];\n      }\n      // Block mixins\n      if (stream.match(/^(\\+|-)[a-z][\\w-]*\\(/i)) {\n        stream.backUp(1);\n        return [\"keyword\", \"block-mixin\"];\n      }\n      // Parent Reference BEM naming\n      if (stream.string.match(/^\\s*&/) && stream.match(/^[-_]+[a-z][\\w-]*/)) {\n        return [\"qualifier\", \"qualifier\"];\n      }\n      // / Root Reference & Parent Reference\n      if (stream.match(/^(\\/|&)(-|_|:|\\.|#|[a-z])/)) {\n        stream.backUp(1);\n        return [\"variable-3\", \"reference\"];\n      }\n      if (stream.match(/^&{1}\\s*$/)) {\n        return [\"variable-3\", \"reference\"];\n      }\n      // Word operator\n      if (stream.match(wordOperatorKeywordsRegexp)) {\n        return [\"operator\", \"operator\"];\n      }\n      // Word\n      if (stream.match(/^\\$?[-_]*[a-z0-9]+[\\w-]*/i)) {\n        // Variable\n        if (stream.match(/^(\\.|\\[)[\\w-\\'\\\"\\]]+/i, false)) {\n          if (!wordIsTag(stream.current())) {\n            stream.match('.');\n            return [\"variable-2\", \"variable-name\"];\n          }\n        }\n        return [\"variable-2\", \"word\"];\n      }\n      // Operators\n      if (stream.match(operatorsRegexp)) {\n        return [\"operator\", stream.current()];\n      }\n      // Delimiters\n      if (/[:;,{}\\[\\]\\(\\)]/.test(ch)) {\n        stream.next();\n        return [null, ch];\n      }\n      // Non-detected items\n      stream.next();\n      return [null, null];\n    }\n\n    /**\n     * Token comment\n     */\n    function tokenCComment(stream, state) {\n      var maybeEnd = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (maybeEnd && ch == \"/\") {\n          state.tokenize = null;\n          break;\n        }\n        maybeEnd = (ch == \"*\");\n      }\n      return [\"comment\", \"comment\"];\n    }\n\n    /**\n     * Token string\n     */\n    function tokenString(quote) {\n      return function(stream, state) {\n        var escaped = false, ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && !escaped) {\n            if (quote == \")\") stream.backUp(1);\n            break;\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\n        return [\"string\", \"string\"];\n      };\n    }\n\n    /**\n     * Token parenthesized\n     */\n    function tokenParenthesized(stream, state) {\n      stream.next(); // Must be \"(\"\n      if (!stream.match(/\\s*[\\\"\\')]/, false))\n        state.tokenize = tokenString(\")\");\n      else\n        state.tokenize = null;\n      return [null, \"(\"];\n    }\n\n    /**\n     * Context management\n     */\n    function Context(type, indent, prev, line) {\n      this.type = type;\n      this.indent = indent;\n      this.prev = prev;\n      this.line = line || {firstWord: \"\", indent: 0};\n    }\n\n    function pushContext(state, stream, type, indent) {\n      indent = indent >= 0 ? indent : indentUnit;\n      state.context = new Context(type, stream.indentation() + indent, state.context);\n      return type;\n    }\n\n    function popContext(state, currentIndent) {\n      var contextIndent = state.context.indent - indentUnit;\n      currentIndent = currentIndent || false;\n      state.context = state.context.prev;\n      if (currentIndent) state.context.indent = contextIndent;\n      return state.context.type;\n    }\n\n    function pass(type, stream, state) {\n      return states[state.context.type](type, stream, state);\n    }\n\n    function popAndPass(type, stream, state, n) {\n      for (var i = n || 1; i > 0; i--)\n        state.context = state.context.prev;\n      return pass(type, stream, state);\n    }\n\n\n    /**\n     * Parser\n     */\n    function wordIsTag(word) {\n      return word.toLowerCase() in tagKeywords;\n    }\n\n    function wordIsProperty(word) {\n      word = word.toLowerCase();\n      return word in propertyKeywords || word in fontProperties;\n    }\n\n    function wordIsBlock(word) {\n      return word.toLowerCase() in blockKeywords;\n    }\n\n    function wordIsVendorPrefix(word) {\n      return word.toLowerCase().match(vendorPrefixesRegexp);\n    }\n\n    function wordAsValue(word) {\n      var wordLC = word.toLowerCase();\n      var override = \"variable-2\";\n      if (wordIsTag(word)) override = \"tag\";\n      else if (wordIsBlock(word)) override = \"block-keyword\";\n      else if (wordIsProperty(word)) override = \"property\";\n      else if (wordLC in valueKeywords || wordLC in commonAtoms) override = \"atom\";\n      else if (wordLC == \"return\" || wordLC in colorKeywords) override = \"keyword\";\n\n      // Font family\n      else if (word.match(/^[A-Z]/)) override = \"string\";\n      return override;\n    }\n\n    function typeIsBlock(type, stream) {\n      return ((endOfLine(stream) && (type == \"{\" || type == \"]\" || type == \"hash\" || type == \"qualifier\")) || type == \"block-mixin\");\n    }\n\n    function typeIsInterpolation(type, stream) {\n      return type == \"{\" && stream.match(/^\\s*\\$?[\\w-]+/i, false);\n    }\n\n    function typeIsPseudo(type, stream) {\n      return type == \":\" && stream.match(/^[a-z-]+/, false);\n    }\n\n    function startOfLine(stream) {\n      return stream.sol() || stream.string.match(new RegExp(\"^\\\\s*\" + escapeRegExp(stream.current())));\n    }\n\n    function endOfLine(stream) {\n      return stream.eol() || stream.match(/^\\s*$/, false);\n    }\n\n    function firstWordOfLine(line) {\n      var re = /^\\s*[-_]*[a-z0-9]+[\\w-]*/i;\n      var result = typeof line == \"string\" ? line.match(re) : line.string.match(re);\n      return result ? result[0].replace(/^\\s*/, \"\") : \"\";\n    }\n\n\n    /**\n     * Block\n     */\n    states.block = function(type, stream, state) {\n      if ((type == \"comment\" && startOfLine(stream)) ||\n          (type == \",\" && endOfLine(stream)) ||\n          type == \"mixin\") {\n        return pushContext(state, stream, \"block\", 0);\n      }\n      if (typeIsInterpolation(type, stream)) {\n        return pushContext(state, stream, \"interpolation\");\n      }\n      if (endOfLine(stream) && type == \"]\") {\n        if (!/^\\s*(\\.|#|:|\\[|\\*|&)/.test(stream.string) && !wordIsTag(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n      }\n      if (typeIsBlock(type, stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"}\" && endOfLine(stream)) {\n        return pushContext(state, stream, \"block\", 0);\n      }\n      if (type == \"variable-name\") {\n        if (stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/) || wordIsBlock(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"variableName\");\n        }\n        else {\n          return pushContext(state, stream, \"variableName\", 0);\n        }\n      }\n      if (type == \"=\") {\n        if (!endOfLine(stream) && !wordIsBlock(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"*\") {\n        if (endOfLine(stream) || stream.match(/\\s*(,|\\.|#|\\[|:|{)/,false)) {\n          override = \"tag\";\n          return pushContext(state, stream, \"block\");\n        }\n      }\n      if (typeIsPseudo(type, stream)) {\n        return pushContext(state, stream, \"pseudo\");\n      }\n      if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n        return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n      }\n      if (/@(-(moz|ms|o|webkit)-)?keyframes$/.test(type)) {\n        return pushContext(state, stream, \"keyframes\");\n      }\n      if (/@extends?/.test(type)) {\n        return pushContext(state, stream, \"extend\", 0);\n      }\n      if (type && type.charAt(0) == \"@\") {\n\n        // Property Lookup\n        if (stream.indentation() > 0 && wordIsProperty(stream.current().slice(1))) {\n          override = \"variable-2\";\n          return \"block\";\n        }\n        if (/(@import|@require|@charset)/.test(type)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"reference\" && endOfLine(stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"(\") {\n        return pushContext(state, stream, \"parens\");\n      }\n\n      if (type == \"vendor-prefixes\") {\n        return pushContext(state, stream, \"vendorPrefixes\");\n      }\n      if (type == \"word\") {\n        var word = stream.current();\n        override = wordAsValue(word);\n\n        if (override == \"property\") {\n          if (startOfLine(stream)) {\n            return pushContext(state, stream, \"block\", 0);\n          } else {\n            override = \"atom\";\n            return \"block\";\n          }\n        }\n\n        if (override == \"tag\") {\n\n          // tag is a css value\n          if (/embed|menu|pre|progress|sub|table/.test(word)) {\n            if (wordIsProperty(firstWordOfLine(stream))) {\n              override = \"atom\";\n              return \"block\";\n            }\n          }\n\n          // tag is an attribute\n          if (stream.string.match(new RegExp(\"\\\\[\\\\s*\" + word + \"|\" + word +\"\\\\s*\\\\]\"))) {\n            override = \"atom\";\n            return \"block\";\n          }\n\n          // tag is a variable\n          if (tagVariablesRegexp.test(word)) {\n            if ((startOfLine(stream) && stream.string.match(/=/)) ||\n                (!startOfLine(stream) &&\n                 !stream.string.match(/^(\\s*\\.|#|\\&|\\[|\\/|>|\\*)/) &&\n                 !wordIsTag(firstWordOfLine(stream)))) {\n              override = \"variable-2\";\n              if (wordIsBlock(firstWordOfLine(stream)))  return \"block\";\n              return pushContext(state, stream, \"block\", 0);\n            }\n          }\n\n          if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        }\n        if (override == \"block-keyword\") {\n          override = \"keyword\";\n\n          // Postfix conditionals\n          if (stream.current(/(if|unless)/) && !startOfLine(stream)) {\n            return \"block\";\n          }\n          return pushContext(state, stream, \"block\");\n        }\n        if (word == \"return\") return pushContext(state, stream, \"block\", 0);\n\n        // Placeholder selector\n        if (override == \"variable-2\" && stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/)) {\n          return pushContext(state, stream, \"block\");\n        }\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Parens\n     */\n    states.parens = function(type, stream, state) {\n      if (type == \"(\") return pushContext(state, stream, \"parens\");\n      if (type == \")\") {\n        if (state.context.prev.type == \"parens\") {\n          return popContext(state);\n        }\n        if ((stream.string.match(/^[a-z][\\w-]*\\(/i) && endOfLine(stream)) ||\n            wordIsBlock(firstWordOfLine(stream)) ||\n            /(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(firstWordOfLine(stream)) ||\n            (!stream.string.match(/^-?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) &&\n             wordIsTag(firstWordOfLine(stream)))) {\n          return pushContext(state, stream, \"block\");\n        }\n        if (stream.string.match(/^[\\$-]?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) ||\n            stream.string.match(/^\\s*(\\(|\\)|[0-9])/) ||\n            stream.string.match(/^\\s+[a-z][\\w-]*\\(/i) ||\n            stream.string.match(/^\\s+[\\$-]?[a-z]/i)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        else return pushContext(state, stream, \"block\", 0);\n      }\n      if (type && type.charAt(0) == \"@\" && wordIsProperty(stream.current().slice(1))) {\n        override = \"variable-2\";\n      }\n      if (type == \"word\") {\n        var word = stream.current();\n        override = wordAsValue(word);\n        if (override == \"tag\" && tagVariablesRegexp.test(word)) {\n          override = \"variable-2\";\n        }\n        if (override == \"property\" || word == \"to\") override = \"atom\";\n      }\n      if (type == \"variable-name\") {\n        return pushContext(state, stream, \"variableName\");\n      }\n      if (typeIsPseudo(type, stream)) {\n        return pushContext(state, stream, \"pseudo\");\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Vendor prefixes\n     */\n    states.vendorPrefixes = function(type, stream, state) {\n      if (type == \"word\") {\n        override = \"property\";\n        return pushContext(state, stream, \"block\", 0);\n      }\n      return popContext(state);\n    };\n\n\n    /**\n     * Pseudo\n     */\n    states.pseudo = function(type, stream, state) {\n      if (!wordIsProperty(firstWordOfLine(stream.string))) {\n        stream.match(/^[a-z-]+/);\n        override = \"variable-3\";\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        return popContext(state);\n      }\n      return popAndPass(type, stream, state);\n    };\n\n\n    /**\n     * atBlock\n     */\n    states.atBlock = function(type, stream, state) {\n      if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\n      if (typeIsBlock(type, stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n      if (typeIsInterpolation(type, stream)) {\n        return pushContext(state, stream, \"interpolation\");\n      }\n      if (type == \"word\") {\n        var word = stream.current().toLowerCase();\n        if (/^(only|not|and|or)$/.test(word))\n          override = \"keyword\";\n        else if (documentTypes.hasOwnProperty(word))\n          override = \"tag\";\n        else if (mediaTypes.hasOwnProperty(word))\n          override = \"attribute\";\n        else if (mediaFeatures.hasOwnProperty(word))\n          override = \"property\";\n        else if (nonStandardPropertyKeywords.hasOwnProperty(word))\n          override = \"string-2\";\n        else override = wordAsValue(stream.current());\n        if (override == \"tag\" && endOfLine(stream)) {\n          return pushContext(state, stream, \"block\");\n        }\n      }\n      if (type == \"operator\" && /^(not|and|or)$/.test(stream.current())) {\n        override = \"keyword\";\n      }\n      return state.context.type;\n    };\n\n    states.atBlock_parens = function(type, stream, state) {\n      if (type == \"{\" || type == \"}\") return state.context.type;\n      if (type == \")\") {\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        else return pushContext(state, stream, \"atBlock\");\n      }\n      if (type == \"word\") {\n        var word = stream.current().toLowerCase();\n        override = wordAsValue(word);\n        if (/^(max|min)/.test(word)) override = \"property\";\n        if (override == \"tag\") {\n          tagVariablesRegexp.test(word) ? override = \"variable-2\" : override = \"atom\";\n        }\n        return state.context.type;\n      }\n      return states.atBlock(type, stream, state);\n    };\n\n\n    /**\n     * Keyframes\n     */\n    states.keyframes = function(type, stream, state) {\n      if (stream.indentation() == \"0\" && ((type == \"}\" && startOfLine(stream)) || type == \"]\" || type == \"hash\"\n                                          || type == \"qualifier\" || wordIsTag(stream.current()))) {\n        return popAndPass(type, stream, state);\n      }\n      if (type == \"{\") return pushContext(state, stream, \"keyframes\");\n      if (type == \"}\") {\n        if (startOfLine(stream)) return popContext(state, true);\n        else return pushContext(state, stream, \"keyframes\");\n      }\n      if (type == \"unit\" && /^[0-9]+\\%$/.test(stream.current())) {\n        return pushContext(state, stream, \"keyframes\");\n      }\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        if (override == \"block-keyword\") {\n          override = \"keyword\";\n          return pushContext(state, stream, \"keyframes\");\n        }\n      }\n      if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n        return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n      }\n      if (type == \"mixin\") {\n        return pushContext(state, stream, \"block\", 0);\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Interpolation\n     */\n    states.interpolation = function(type, stream, state) {\n      if (type == \"{\") popContext(state) && pushContext(state, stream, \"block\");\n      if (type == \"}\") {\n        if (stream.string.match(/^\\s*(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/i) ||\n            (stream.string.match(/^\\s*[a-z]/i) && wordIsTag(firstWordOfLine(stream)))) {\n          return pushContext(state, stream, \"block\");\n        }\n        if (!stream.string.match(/^(\\{|\\s*\\&)/) ||\n            stream.match(/\\s*[\\w-]/,false)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"variable-name\") {\n        return pushContext(state, stream, \"variableName\", 0);\n      }\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        if (override == \"tag\") override = \"atom\";\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Extend/s\n     */\n    states.extend = function(type, stream, state) {\n      if (type == \"[\" || type == \"=\") return \"extend\";\n      if (type == \"]\") return popContext(state);\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        return \"extend\";\n      }\n      return popContext(state);\n    };\n\n\n    /**\n     * Variable name\n     */\n    states.variableName = function(type, stream, state) {\n      if (type == \"string\" || type == \"[\" || type == \"]\" || stream.current().match(/^(\\.|\\$)/)) {\n        if (stream.current().match(/^\\.[\\w-]+/i)) override = \"variable-2\";\n        return \"variableName\";\n      }\n      return popAndPass(type, stream, state);\n    };\n\n\n    return {\n      startState: function(base) {\n        return {\n          tokenize: null,\n          state: \"block\",\n          context: new Context(\"block\", base || 0, null)\n        };\n      },\n      token: function(stream, state) {\n        if (!state.tokenize && stream.eatSpace()) return null;\n        style = (state.tokenize || tokenBase)(stream, state);\n        if (style && typeof style == \"object\") {\n          type = style[1];\n          style = style[0];\n        }\n        override = style;\n        state.state = states[state.state](type, stream, state);\n        return override;\n      },\n      indent: function(state, textAfter, line) {\n\n        var cx = state.context,\n            ch = textAfter && textAfter.charAt(0),\n            indent = cx.indent,\n            lineFirstWord = firstWordOfLine(textAfter),\n            lineIndent = line.match(/^\\s*/)[0].replace(/\\t/g, indentUnitString).length,\n            prevLineFirstWord = state.context.prev ? state.context.prev.line.firstWord : \"\",\n            prevLineIndent = state.context.prev ? state.context.prev.line.indent : lineIndent;\n\n        if (cx.prev &&\n            (ch == \"}\" && (cx.type == \"block\" || cx.type == \"atBlock\" || cx.type == \"keyframes\") ||\n             ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") ||\n             ch == \"{\" && (cx.type == \"at\"))) {\n          indent = cx.indent - indentUnit;\n        } else if (!(/(\\})/.test(ch))) {\n          if (/@|\\$|\\d/.test(ch) ||\n              /^\\{/.test(textAfter) ||\n/^\\s*\\/(\\/|\\*)/.test(textAfter) ||\n              /^\\s*\\/\\*/.test(prevLineFirstWord) ||\n              /^\\s*[\\w-\\.\\[\\]\\'\\\"]+\\s*(\\?|:|\\+)?=/i.test(textAfter) ||\n/^(\\+|-)?[a-z][\\w-]*\\(/i.test(textAfter) ||\n/^return/.test(textAfter) ||\n              wordIsBlock(lineFirstWord)) {\n            indent = lineIndent;\n          } else if (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(ch) || wordIsTag(lineFirstWord)) {\n            if (/\\,\\s*$/.test(prevLineFirstWord)) {\n              indent = prevLineIndent;\n            } else if (/^\\s+/.test(line) && (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(prevLineFirstWord) || wordIsTag(prevLineFirstWord))) {\n              indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + indentUnit;\n            } else {\n              indent = lineIndent;\n            }\n          } else if (!/,\\s*$/.test(line) && (wordIsVendorPrefix(lineFirstWord) || wordIsProperty(lineFirstWord))) {\n            if (wordIsBlock(prevLineFirstWord)) {\n              indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + indentUnit;\n            } else if (/^\\{/.test(prevLineFirstWord)) {\n              indent = lineIndent <= prevLineIndent ? lineIndent : prevLineIndent + indentUnit;\n            } else if (wordIsVendorPrefix(prevLineFirstWord) || wordIsProperty(prevLineFirstWord)) {\n              indent = lineIndent >= prevLineIndent ? prevLineIndent : lineIndent;\n            } else if (/^(\\.|#|:|\\[|\\*|&|@|\\+|\\-|>|~|\\/)/.test(prevLineFirstWord) ||\n                      /=\\s*$/.test(prevLineFirstWord) ||\n                      wordIsTag(prevLineFirstWord) ||\n                      /^\\$[\\w-\\.\\[\\]\\'\\\"]/.test(prevLineFirstWord)) {\n              indent = prevLineIndent + indentUnit;\n            } else {\n              indent = lineIndent;\n            }\n          }\n        }\n        return indent;\n      },\n      electricChars: \"}\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      lineComment: \"//\",\n      fold: \"indent\"\n    };\n  });\n\n  // developer.mozilla.org/en-US/docs/Web/HTML/Element\n  var tagKeywords_ = [\"a\",\"abbr\",\"address\",\"area\",\"article\",\"aside\",\"audio\", \"b\", \"base\",\"bdi\", \"bdo\",\"bgsound\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"cite\", \"code\",\"col\",\"colgroup\",\"data\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"div\", \"dl\",\"dt\",\"em\",\"embed\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\", \"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"iframe\", \"img\",\"input\",\"ins\",\"kbd\",\"keygen\",\"label\",\"legend\",\"li\",\"link\",\"main\",\"map\", \"mark\",\"marquee\",\"menu\",\"menuitem\",\"meta\",\"meter\",\"nav\",\"nobr\",\"noframes\", \"noscript\",\"object\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"param\",\"pre\", \"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\", \"small\",\"source\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"tr\",\"track\", \"u\",\"ul\",\"var\",\"video\"];\n\n  // github.com/codemirror/CodeMirror/blob/master/mode/css/css.js\n  // Note, \"url-prefix\" should precede \"url\" in order to match correctly in documentTypesRegexp\n  var documentTypes_ = [\"domain\", \"regexp\", \"url-prefix\", \"url\"];\n  var mediaTypes_ = [\"all\",\"aural\",\"braille\",\"handheld\",\"print\",\"projection\",\"screen\",\"tty\",\"tv\",\"embossed\"];\n  var mediaFeatures_ = [\"width\",\"min-width\",\"max-width\",\"height\",\"min-height\",\"max-height\",\"device-width\",\"min-device-width\",\"max-device-width\",\"device-height\",\"min-device-height\",\"max-device-height\",\"aspect-ratio\",\"min-aspect-ratio\",\"max-aspect-ratio\",\"device-aspect-ratio\",\"min-device-aspect-ratio\",\"max-device-aspect-ratio\",\"color\",\"min-color\",\"max-color\",\"color-index\",\"min-color-index\",\"max-color-index\",\"monochrome\",\"min-monochrome\",\"max-monochrome\",\"resolution\",\"min-resolution\",\"max-resolution\",\"scan\",\"grid\",\"dynamic-range\",\"video-dynamic-range\"];\n  var propertyKeywords_ = [\"align-content\",\"align-items\",\"align-self\",\"alignment-adjust\",\"alignment-baseline\",\"anchor-point\",\"animation\",\"animation-delay\",\"animation-direction\",\"animation-duration\",\"animation-fill-mode\",\"animation-iteration-count\",\"animation-name\",\"animation-play-state\",\"animation-timing-function\",\"appearance\",\"azimuth\",\"backface-visibility\",\"background\",\"background-attachment\",\"background-clip\",\"background-color\",\"background-image\",\"background-origin\",\"background-position\",\"background-repeat\",\"background-size\",\"baseline-shift\",\"binding\",\"bleed\",\"bookmark-label\",\"bookmark-level\",\"bookmark-state\",\"bookmark-target\",\"border\",\"border-bottom\",\"border-bottom-color\",\"border-bottom-left-radius\",\"border-bottom-right-radius\",\"border-bottom-style\",\"border-bottom-width\",\"border-collapse\",\"border-color\",\"border-image\",\"border-image-outset\",\"border-image-repeat\",\"border-image-slice\",\"border-image-source\",\"border-image-width\",\"border-left\",\"border-left-color\",\"border-left-style\",\"border-left-width\",\"border-radius\",\"border-right\",\"border-right-color\",\"border-right-style\",\"border-right-width\",\"border-spacing\",\"border-style\",\"border-top\",\"border-top-color\",\"border-top-left-radius\",\"border-top-right-radius\",\"border-top-style\",\"border-top-width\",\"border-width\",\"bottom\",\"box-decoration-break\",\"box-shadow\",\"box-sizing\",\"break-after\",\"break-before\",\"break-inside\",\"caption-side\",\"clear\",\"clip\",\"color\",\"color-profile\",\"column-count\",\"column-fill\",\"column-gap\",\"column-rule\",\"column-rule-color\",\"column-rule-style\",\"column-rule-width\",\"column-span\",\"column-width\",\"columns\",\"content\",\"counter-increment\",\"counter-reset\",\"crop\",\"cue\",\"cue-after\",\"cue-before\",\"cursor\",\"direction\",\"display\",\"dominant-baseline\",\"drop-initial-after-adjust\",\"drop-initial-after-align\",\"drop-initial-before-adjust\",\"drop-initial-before-align\",\"drop-initial-size\",\"drop-initial-value\",\"elevation\",\"empty-cells\",\"fit\",\"fit-position\",\"flex\",\"flex-basis\",\"flex-direction\",\"flex-flow\",\"flex-grow\",\"flex-shrink\",\"flex-wrap\",\"float\",\"float-offset\",\"flow-from\",\"flow-into\",\"font\",\"font-feature-settings\",\"font-family\",\"font-kerning\",\"font-language-override\",\"font-size\",\"font-size-adjust\",\"font-stretch\",\"font-style\",\"font-synthesis\",\"font-variant\",\"font-variant-alternates\",\"font-variant-caps\",\"font-variant-east-asian\",\"font-variant-ligatures\",\"font-variant-numeric\",\"font-variant-position\",\"font-weight\",\"grid\",\"grid-area\",\"grid-auto-columns\",\"grid-auto-flow\",\"grid-auto-position\",\"grid-auto-rows\",\"grid-column\",\"grid-column-end\",\"grid-column-start\",\"grid-row\",\"grid-row-end\",\"grid-row-start\",\"grid-template\",\"grid-template-areas\",\"grid-template-columns\",\"grid-template-rows\",\"hanging-punctuation\",\"height\",\"hyphens\",\"icon\",\"image-orientation\",\"image-rendering\",\"image-resolution\",\"inline-box-align\",\"justify-content\",\"left\",\"letter-spacing\",\"line-break\",\"line-height\",\"line-stacking\",\"line-stacking-ruby\",\"line-stacking-shift\",\"line-stacking-strategy\",\"list-style\",\"list-style-image\",\"list-style-position\",\"list-style-type\",\"margin\",\"margin-bottom\",\"margin-left\",\"margin-right\",\"margin-top\",\"marker-offset\",\"marks\",\"marquee-direction\",\"marquee-loop\",\"marquee-play-count\",\"marquee-speed\",\"marquee-style\",\"max-height\",\"max-width\",\"min-height\",\"min-width\",\"move-to\",\"nav-down\",\"nav-index\",\"nav-left\",\"nav-right\",\"nav-up\",\"object-fit\",\"object-position\",\"opacity\",\"order\",\"orphans\",\"outline\",\"outline-color\",\"outline-offset\",\"outline-style\",\"outline-width\",\"overflow\",\"overflow-style\",\"overflow-wrap\",\"overflow-x\",\"overflow-y\",\"padding\",\"padding-bottom\",\"padding-left\",\"padding-right\",\"padding-top\",\"page\",\"page-break-after\",\"page-break-before\",\"page-break-inside\",\"page-policy\",\"pause\",\"pause-after\",\"pause-before\",\"perspective\",\"perspective-origin\",\"pitch\",\"pitch-range\",\"play-during\",\"position\",\"presentation-level\",\"punctuation-trim\",\"quotes\",\"region-break-after\",\"region-break-before\",\"region-break-inside\",\"region-fragment\",\"rendering-intent\",\"resize\",\"rest\",\"rest-after\",\"rest-before\",\"richness\",\"right\",\"rotation\",\"rotation-point\",\"ruby-align\",\"ruby-overhang\",\"ruby-position\",\"ruby-span\",\"shape-image-threshold\",\"shape-inside\",\"shape-margin\",\"shape-outside\",\"size\",\"speak\",\"speak-as\",\"speak-header\",\"speak-numeral\",\"speak-punctuation\",\"speech-rate\",\"stress\",\"string-set\",\"tab-size\",\"table-layout\",\"target\",\"target-name\",\"target-new\",\"target-position\",\"text-align\",\"text-align-last\",\"text-decoration\",\"text-decoration-color\",\"text-decoration-line\",\"text-decoration-skip\",\"text-decoration-style\",\"text-emphasis\",\"text-emphasis-color\",\"text-emphasis-position\",\"text-emphasis-style\",\"text-height\",\"text-indent\",\"text-justify\",\"text-outline\",\"text-overflow\",\"text-shadow\",\"text-size-adjust\",\"text-space-collapse\",\"text-transform\",\"text-underline-position\",\"text-wrap\",\"top\",\"transform\",\"transform-origin\",\"transform-style\",\"transition\",\"transition-delay\",\"transition-duration\",\"transition-property\",\"transition-timing-function\",\"unicode-bidi\",\"vertical-align\",\"visibility\",\"voice-balance\",\"voice-duration\",\"voice-family\",\"voice-pitch\",\"voice-range\",\"voice-rate\",\"voice-stress\",\"voice-volume\",\"volume\",\"white-space\",\"widows\",\"width\",\"will-change\",\"word-break\",\"word-spacing\",\"word-wrap\",\"z-index\",\"clip-path\",\"clip-rule\",\"mask\",\"enable-background\",\"filter\",\"flood-color\",\"flood-opacity\",\"lighting-color\",\"stop-color\",\"stop-opacity\",\"pointer-events\",\"color-interpolation\",\"color-interpolation-filters\",\"color-rendering\",\"fill\",\"fill-opacity\",\"fill-rule\",\"image-rendering\",\"marker\",\"marker-end\",\"marker-mid\",\"marker-start\",\"shape-rendering\",\"stroke\",\"stroke-dasharray\",\"stroke-dashoffset\",\"stroke-linecap\",\"stroke-linejoin\",\"stroke-miterlimit\",\"stroke-opacity\",\"stroke-width\",\"text-rendering\",\"baseline-shift\",\"dominant-baseline\",\"glyph-orientation-horizontal\",\"glyph-orientation-vertical\",\"text-anchor\",\"writing-mode\",\"font-smoothing\",\"osx-font-smoothing\"];\n  var nonStandardPropertyKeywords_ = [\"scrollbar-arrow-color\",\"scrollbar-base-color\",\"scrollbar-dark-shadow-color\",\"scrollbar-face-color\",\"scrollbar-highlight-color\",\"scrollbar-shadow-color\",\"scrollbar-3d-light-color\",\"scrollbar-track-color\",\"shape-inside\",\"searchfield-cancel-button\",\"searchfield-decoration\",\"searchfield-results-button\",\"searchfield-results-decoration\",\"zoom\"];\n  var fontProperties_ = [\"font-family\",\"src\",\"unicode-range\",\"font-variant\",\"font-feature-settings\",\"font-stretch\",\"font-weight\",\"font-style\"];\n  var colorKeywords_ = [\"aliceblue\",\"antiquewhite\",\"aqua\",\"aquamarine\",\"azure\",\"beige\",\"bisque\",\"black\",\"blanchedalmond\",\"blue\",\"blueviolet\",\"brown\",\"burlywood\",\"cadetblue\",\"chartreuse\",\"chocolate\",\"coral\",\"cornflowerblue\",\"cornsilk\",\"crimson\",\"cyan\",\"darkblue\",\"darkcyan\",\"darkgoldenrod\",\"darkgray\",\"darkgreen\",\"darkkhaki\",\"darkmagenta\",\"darkolivegreen\",\"darkorange\",\"darkorchid\",\"darkred\",\"darksalmon\",\"darkseagreen\",\"darkslateblue\",\"darkslategray\",\"darkturquoise\",\"darkviolet\",\"deeppink\",\"deepskyblue\",\"dimgray\",\"dodgerblue\",\"firebrick\",\"floralwhite\",\"forestgreen\",\"fuchsia\",\"gainsboro\",\"ghostwhite\",\"gold\",\"goldenrod\",\"gray\",\"grey\",\"green\",\"greenyellow\",\"honeydew\",\"hotpink\",\"indianred\",\"indigo\",\"ivory\",\"khaki\",\"lavender\",\"lavenderblush\",\"lawngreen\",\"lemonchiffon\",\"lightblue\",\"lightcoral\",\"lightcyan\",\"lightgoldenrodyellow\",\"lightgray\",\"lightgreen\",\"lightpink\",\"lightsalmon\",\"lightseagreen\",\"lightskyblue\",\"lightslategray\",\"lightsteelblue\",\"lightyellow\",\"lime\",\"limegreen\",\"linen\",\"magenta\",\"maroon\",\"mediumaquamarine\",\"mediumblue\",\"mediumorchid\",\"mediumpurple\",\"mediumseagreen\",\"mediumslateblue\",\"mediumspringgreen\",\"mediumturquoise\",\"mediumvioletred\",\"midnightblue\",\"mintcream\",\"mistyrose\",\"moccasin\",\"navajowhite\",\"navy\",\"oldlace\",\"olive\",\"olivedrab\",\"orange\",\"orangered\",\"orchid\",\"palegoldenrod\",\"palegreen\",\"paleturquoise\",\"palevioletred\",\"papayawhip\",\"peachpuff\",\"peru\",\"pink\",\"plum\",\"powderblue\",\"purple\",\"rebeccapurple\",\"red\",\"rosybrown\",\"royalblue\",\"saddlebrown\",\"salmon\",\"sandybrown\",\"seagreen\",\"seashell\",\"sienna\",\"silver\",\"skyblue\",\"slateblue\",\"slategray\",\"snow\",\"springgreen\",\"steelblue\",\"tan\",\"teal\",\"thistle\",\"tomato\",\"turquoise\",\"violet\",\"wheat\",\"white\",\"whitesmoke\",\"yellow\",\"yellowgreen\"];\n  var valueKeywords_ = [\"above\",\"absolute\",\"activeborder\",\"additive\",\"activecaption\",\"afar\",\"after-white-space\",\"ahead\",\"alias\",\"all\",\"all-scroll\",\"alphabetic\",\"alternate\",\"always\",\"amharic\",\"amharic-abegede\",\"antialiased\",\"appworkspace\",\"arabic-indic\",\"armenian\",\"asterisks\",\"attr\",\"auto\",\"avoid\",\"avoid-column\",\"avoid-page\",\"avoid-region\",\"background\",\"backwards\",\"baseline\",\"below\",\"bidi-override\",\"binary\",\"bengali\",\"blink\",\"block\",\"block-axis\",\"bold\",\"bolder\",\"border\",\"border-box\",\"both\",\"bottom\",\"break\",\"break-all\",\"break-word\",\"bullets\",\"button\",\"buttonface\",\"buttonhighlight\",\"buttonshadow\",\"buttontext\",\"calc\",\"cambodian\",\"capitalize\",\"caps-lock-indicator\",\"caption\",\"captiontext\",\"caret\",\"cell\",\"center\",\"checkbox\",\"circle\",\"cjk-decimal\",\"cjk-earthly-branch\",\"cjk-heavenly-stem\",\"cjk-ideographic\",\"clear\",\"clip\",\"close-quote\",\"col-resize\",\"collapse\",\"column\",\"compact\",\"condensed\",\"conic-gradient\",\"contain\",\"content\",\"contents\",\"content-box\",\"context-menu\",\"continuous\",\"copy\",\"counter\",\"counters\",\"cover\",\"crop\",\"cross\",\"crosshair\",\"currentcolor\",\"cursive\",\"cyclic\",\"dashed\",\"decimal\",\"decimal-leading-zero\",\"default\",\"default-button\",\"destination-atop\",\"destination-in\",\"destination-out\",\"destination-over\",\"devanagari\",\"disc\",\"discard\",\"disclosure-closed\",\"disclosure-open\",\"document\",\"dot-dash\",\"dot-dot-dash\",\"dotted\",\"double\",\"down\",\"e-resize\",\"ease\",\"ease-in\",\"ease-in-out\",\"ease-out\",\"element\",\"ellipse\",\"ellipsis\",\"embed\",\"end\",\"ethiopic\",\"ethiopic-abegede\",\"ethiopic-abegede-am-et\",\"ethiopic-abegede-gez\",\"ethiopic-abegede-ti-er\",\"ethiopic-abegede-ti-et\",\"ethiopic-halehame-aa-er\",\"ethiopic-halehame-aa-et\",\"ethiopic-halehame-am-et\",\"ethiopic-halehame-gez\",\"ethiopic-halehame-om-et\",\"ethiopic-halehame-sid-et\",\"ethiopic-halehame-so-et\",\"ethiopic-halehame-ti-er\",\"ethiopic-halehame-ti-et\",\"ethiopic-halehame-tig\",\"ethiopic-numeric\",\"ew-resize\",\"expanded\",\"extends\",\"extra-condensed\",\"extra-expanded\",\"fantasy\",\"fast\",\"fill\",\"fixed\",\"flat\",\"flex\",\"footnotes\",\"forwards\",\"from\",\"geometricPrecision\",\"georgian\",\"graytext\",\"groove\",\"gujarati\",\"gurmukhi\",\"hand\",\"hangul\",\"hangul-consonant\",\"hebrew\",\"help\",\"hidden\",\"hide\",\"high\",\"higher\",\"highlight\",\"highlighttext\",\"hiragana\",\"hiragana-iroha\",\"horizontal\",\"hsl\",\"hsla\",\"icon\",\"ignore\",\"inactiveborder\",\"inactivecaption\",\"inactivecaptiontext\",\"infinite\",\"infobackground\",\"infotext\",\"inherit\",\"initial\",\"inline\",\"inline-axis\",\"inline-block\",\"inline-flex\",\"inline-table\",\"inset\",\"inside\",\"intrinsic\",\"invert\",\"italic\",\"japanese-formal\",\"japanese-informal\",\"justify\",\"kannada\",\"katakana\",\"katakana-iroha\",\"keep-all\",\"khmer\",\"korean-hangul-formal\",\"korean-hanja-formal\",\"korean-hanja-informal\",\"landscape\",\"lao\",\"large\",\"larger\",\"left\",\"level\",\"lighter\",\"line-through\",\"linear\",\"linear-gradient\",\"lines\",\"list-item\",\"listbox\",\"listitem\",\"local\",\"logical\",\"loud\",\"lower\",\"lower-alpha\",\"lower-armenian\",\"lower-greek\",\"lower-hexadecimal\",\"lower-latin\",\"lower-norwegian\",\"lower-roman\",\"lowercase\",\"ltr\",\"malayalam\",\"match\",\"matrix\",\"matrix3d\",\"media-play-button\",\"media-slider\",\"media-sliderthumb\",\"media-volume-slider\",\"media-volume-sliderthumb\",\"medium\",\"menu\",\"menulist\",\"menulist-button\",\"menutext\",\"message-box\",\"middle\",\"min-intrinsic\",\"mix\",\"mongolian\",\"monospace\",\"move\",\"multiple\",\"myanmar\",\"n-resize\",\"narrower\",\"ne-resize\",\"nesw-resize\",\"no-close-quote\",\"no-drop\",\"no-open-quote\",\"no-repeat\",\"none\",\"normal\",\"not-allowed\",\"nowrap\",\"ns-resize\",\"numbers\",\"numeric\",\"nw-resize\",\"nwse-resize\",\"oblique\",\"octal\",\"open-quote\",\"optimizeLegibility\",\"optimizeSpeed\",\"oriya\",\"oromo\",\"outset\",\"outside\",\"outside-shape\",\"overlay\",\"overline\",\"padding\",\"padding-box\",\"painted\",\"page\",\"paused\",\"persian\",\"perspective\",\"plus-darker\",\"plus-lighter\",\"pointer\",\"polygon\",\"portrait\",\"pre\",\"pre-line\",\"pre-wrap\",\"preserve-3d\",\"progress\",\"push-button\",\"radial-gradient\",\"radio\",\"read-only\",\"read-write\",\"read-write-plaintext-only\",\"rectangle\",\"region\",\"relative\",\"repeat\",\"repeating-linear-gradient\",\"repeating-radial-gradient\",\"repeating-conic-gradient\",\"repeat-x\",\"repeat-y\",\"reset\",\"reverse\",\"rgb\",\"rgba\",\"ridge\",\"right\",\"rotate\",\"rotate3d\",\"rotateX\",\"rotateY\",\"rotateZ\",\"round\",\"row-resize\",\"rtl\",\"run-in\",\"running\",\"s-resize\",\"sans-serif\",\"scale\",\"scale3d\",\"scaleX\",\"scaleY\",\"scaleZ\",\"scroll\",\"scrollbar\",\"scroll-position\",\"se-resize\",\"searchfield\",\"searchfield-cancel-button\",\"searchfield-decoration\",\"searchfield-results-button\",\"searchfield-results-decoration\",\"semi-condensed\",\"semi-expanded\",\"separate\",\"serif\",\"show\",\"sidama\",\"simp-chinese-formal\",\"simp-chinese-informal\",\"single\",\"skew\",\"skewX\",\"skewY\",\"skip-white-space\",\"slide\",\"slider-horizontal\",\"slider-vertical\",\"sliderthumb-horizontal\",\"sliderthumb-vertical\",\"slow\",\"small\",\"small-caps\",\"small-caption\",\"smaller\",\"solid\",\"somali\",\"source-atop\",\"source-in\",\"source-out\",\"source-over\",\"space\",\"spell-out\",\"square\",\"square-button\",\"standard\",\"start\",\"static\",\"status-bar\",\"stretch\",\"stroke\",\"sub\",\"subpixel-antialiased\",\"super\",\"sw-resize\",\"symbolic\",\"symbols\",\"table\",\"table-caption\",\"table-cell\",\"table-column\",\"table-column-group\",\"table-footer-group\",\"table-header-group\",\"table-row\",\"table-row-group\",\"tamil\",\"telugu\",\"text\",\"text-bottom\",\"text-top\",\"textarea\",\"textfield\",\"thai\",\"thick\",\"thin\",\"threeddarkshadow\",\"threedface\",\"threedhighlight\",\"threedlightshadow\",\"threedshadow\",\"tibetan\",\"tigre\",\"tigrinya-er\",\"tigrinya-er-abegede\",\"tigrinya-et\",\"tigrinya-et-abegede\",\"to\",\"top\",\"trad-chinese-formal\",\"trad-chinese-informal\",\"translate\",\"translate3d\",\"translateX\",\"translateY\",\"translateZ\",\"transparent\",\"ultra-condensed\",\"ultra-expanded\",\"underline\",\"up\",\"upper-alpha\",\"upper-armenian\",\"upper-greek\",\"upper-hexadecimal\",\"upper-latin\",\"upper-norwegian\",\"upper-roman\",\"uppercase\",\"urdu\",\"url\",\"var\",\"vertical\",\"vertical-text\",\"visible\",\"visibleFill\",\"visiblePainted\",\"visibleStroke\",\"visual\",\"w-resize\",\"wait\",\"wave\",\"wider\",\"window\",\"windowframe\",\"windowtext\",\"words\",\"x-large\",\"x-small\",\"xor\",\"xx-large\",\"xx-small\",\"bicubic\",\"optimizespeed\",\"grayscale\",\"row\",\"row-reverse\",\"wrap\",\"wrap-reverse\",\"column-reverse\",\"flex-start\",\"flex-end\",\"space-between\",\"space-around\", \"unset\"];\n\n  var wordOperatorKeywords_ = [\"in\",\"and\",\"or\",\"not\",\"is not\",\"is a\",\"is\",\"isnt\",\"defined\",\"if unless\"],\n      blockKeywords_ = [\"for\",\"if\",\"else\",\"unless\", \"from\", \"to\"],\n      commonAtoms_ = [\"null\",\"true\",\"false\",\"href\",\"title\",\"type\",\"not-allowed\",\"readonly\",\"disabled\"],\n      commonDef_ = [\"@font-face\", \"@keyframes\", \"@media\", \"@viewport\", \"@page\", \"@host\", \"@supports\", \"@block\", \"@css\"];\n\n  var hintWords = tagKeywords_.concat(documentTypes_,mediaTypes_,mediaFeatures_,\n                                      propertyKeywords_,nonStandardPropertyKeywords_,\n                                      colorKeywords_,valueKeywords_,fontProperties_,\n                                      wordOperatorKeywords_,blockKeywords_,\n                                      commonAtoms_,commonDef_);\n\n  function wordRegexp(words) {\n    words = words.sort(function(a,b){return b > a;});\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  function keySet(array) {\n    var keys = {};\n    for (var i = 0; i < array.length; ++i) keys[array[i]] = true;\n    return keys;\n  }\n\n  function escapeRegExp(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n  }\n\n  CodeMirror.registerHelper(\"hintWords\", \"stylus\", hintWords);\n  CodeMirror.defineMIME(\"text/x-styl\", \"stylus\");\n});\n"],
  "mappings": "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",
  "names": ["CodeMirror", "ch", "type", "override"]
}
