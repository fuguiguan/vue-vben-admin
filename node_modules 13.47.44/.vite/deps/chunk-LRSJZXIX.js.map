{
  "version": 3,
  "sources": ["../../.pnpm/codemirror@5.65.16/node_modules/codemirror/mode/stex/stex.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n/*\n * Author: Constantin Jucovschi (c.jucovschi@jacobs-university.de)\n * Licence: MIT\n */\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"stex\", function(_config, parserConfig) {\n    \"use strict\";\n\n    function pushCommand(state, command) {\n      state.cmdState.push(command);\n    }\n\n    function peekCommand(state) {\n      if (state.cmdState.length > 0) {\n        return state.cmdState[state.cmdState.length - 1];\n      } else {\n        return null;\n      }\n    }\n\n    function popCommand(state) {\n      var plug = state.cmdState.pop();\n      if (plug) {\n        plug.closeBracket();\n      }\n    }\n\n    // returns the non-default plugin closest to the end of the list\n    function getMostPowerful(state) {\n      var context = state.cmdState;\n      for (var i = context.length - 1; i >= 0; i--) {\n        var plug = context[i];\n        if (plug.name == \"DEFAULT\") {\n          continue;\n        }\n        return plug;\n      }\n      return { styleIdentifier: function() { return null; } };\n    }\n\n    function addPluginPattern(pluginName, cmdStyle, styles) {\n      return function () {\n        this.name = pluginName;\n        this.bracketNo = 0;\n        this.style = cmdStyle;\n        this.styles = styles;\n        this.argument = null;   // \\begin and \\end have arguments that follow. These are stored in the plugin\n\n        this.styleIdentifier = function() {\n          return this.styles[this.bracketNo - 1] || null;\n        };\n        this.openBracket = function() {\n          this.bracketNo++;\n          return \"bracket\";\n        };\n        this.closeBracket = function() {};\n      };\n    }\n\n    var plugins = {};\n\n    plugins[\"importmodule\"] = addPluginPattern(\"importmodule\", \"tag\", [\"string\", \"builtin\"]);\n    plugins[\"documentclass\"] = addPluginPattern(\"documentclass\", \"tag\", [\"\", \"atom\"]);\n    plugins[\"usepackage\"] = addPluginPattern(\"usepackage\", \"tag\", [\"atom\"]);\n    plugins[\"begin\"] = addPluginPattern(\"begin\", \"tag\", [\"atom\"]);\n    plugins[\"end\"] = addPluginPattern(\"end\", \"tag\", [\"atom\"]);\n\n    plugins[\"label\"    ] = addPluginPattern(\"label\"    , \"tag\", [\"atom\"]);\n    plugins[\"ref\"      ] = addPluginPattern(\"ref\"      , \"tag\", [\"atom\"]);\n    plugins[\"eqref\"    ] = addPluginPattern(\"eqref\"    , \"tag\", [\"atom\"]);\n    plugins[\"cite\"     ] = addPluginPattern(\"cite\"     , \"tag\", [\"atom\"]);\n    plugins[\"bibitem\"  ] = addPluginPattern(\"bibitem\"  , \"tag\", [\"atom\"]);\n    plugins[\"Bibitem\"  ] = addPluginPattern(\"Bibitem\"  , \"tag\", [\"atom\"]);\n    plugins[\"RBibitem\" ] = addPluginPattern(\"RBibitem\" , \"tag\", [\"atom\"]);\n\n    plugins[\"DEFAULT\"] = function () {\n      this.name = \"DEFAULT\";\n      this.style = \"tag\";\n\n      this.styleIdentifier = this.openBracket = this.closeBracket = function() {};\n    };\n\n    function setState(state, f) {\n      state.f = f;\n    }\n\n    // called when in a normal (no environment) context\n    function normal(source, state) {\n      var plug;\n      // Do we look like '\\command' ?  If so, attempt to apply the plugin 'command'\n      if (source.match(/^\\\\[a-zA-Z@]+/)) {\n        var cmdName = source.current().slice(1);\n        plug = plugins.hasOwnProperty(cmdName) ? plugins[cmdName] : plugins[\"DEFAULT\"];\n        plug = new plug();\n        pushCommand(state, plug);\n        setState(state, beginParams);\n        return plug.style;\n      }\n\n      // escape characters\n      if (source.match(/^\\\\[$&%#{}_]/)) {\n        return \"tag\";\n      }\n\n      // white space control characters\n      if (source.match(/^\\\\[,;!\\/\\\\]/)) {\n        return \"tag\";\n      }\n\n      // find if we're starting various math modes\n      if (source.match(\"\\\\[\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"\\\\]\"); });\n        return \"keyword\";\n      }\n      if (source.match(\"\\\\(\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"\\\\)\"); });\n        return \"keyword\";\n      }\n      if (source.match(\"$$\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"$$\"); });\n        return \"keyword\";\n      }\n      if (source.match(\"$\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"$\"); });\n        return \"keyword\";\n      }\n\n      var ch = source.next();\n      if (ch == \"%\") {\n        source.skipToEnd();\n        return \"comment\";\n      } else if (ch == '}' || ch == ']') {\n        plug = peekCommand(state);\n        if (plug) {\n          plug.closeBracket(ch);\n          setState(state, beginParams);\n        } else {\n          return \"error\";\n        }\n        return \"bracket\";\n      } else if (ch == '{' || ch == '[') {\n        plug = plugins[\"DEFAULT\"];\n        plug = new plug();\n        pushCommand(state, plug);\n        return \"bracket\";\n      } else if (/\\d/.test(ch)) {\n        source.eatWhile(/[\\w.%]/);\n        return \"atom\";\n      } else {\n        source.eatWhile(/[\\w\\-_]/);\n        plug = getMostPowerful(state);\n        if (plug.name == 'begin') {\n          plug.argument = source.current();\n        }\n        return plug.styleIdentifier();\n      }\n    }\n\n    function inMathMode(source, state, endModeSeq) {\n      if (source.eatSpace()) {\n        return null;\n      }\n      if (endModeSeq && source.match(endModeSeq)) {\n        setState(state, normal);\n        return \"keyword\";\n      }\n      if (source.match(/^\\\\[a-zA-Z@]+/)) {\n        return \"tag\";\n      }\n      if (source.match(/^[a-zA-Z]+/)) {\n        return \"variable-2\";\n      }\n      // escape characters\n      if (source.match(/^\\\\[$&%#{}_]/)) {\n        return \"tag\";\n      }\n      // white space control characters\n      if (source.match(/^\\\\[,;!\\/]/)) {\n        return \"tag\";\n      }\n      // special math-mode characters\n      if (source.match(/^[\\^_&]/)) {\n        return \"tag\";\n      }\n      // non-special characters\n      if (source.match(/^[+\\-<>|=,\\/@!*:;'\"`~#?]/)) {\n        return null;\n      }\n      if (source.match(/^(\\d+\\.\\d*|\\d*\\.\\d+|\\d+)/)) {\n        return \"number\";\n      }\n      var ch = source.next();\n      if (ch == \"{\" || ch == \"}\" || ch == \"[\" || ch == \"]\" || ch == \"(\" || ch == \")\") {\n        return \"bracket\";\n      }\n\n      if (ch == \"%\") {\n        source.skipToEnd();\n        return \"comment\";\n      }\n      return \"error\";\n    }\n\n    function beginParams(source, state) {\n      var ch = source.peek(), lastPlug;\n      if (ch == '{' || ch == '[') {\n        lastPlug = peekCommand(state);\n        lastPlug.openBracket(ch);\n        source.eat(ch);\n        setState(state, normal);\n        return \"bracket\";\n      }\n      if (/[ \\t\\r]/.test(ch)) {\n        source.eat(ch);\n        return null;\n      }\n      setState(state, normal);\n      popCommand(state);\n\n      return normal(source, state);\n    }\n\n    return {\n      startState: function() {\n        var f = parserConfig.inMathMode ? function(source, state){ return inMathMode(source, state); } : normal;\n        return {\n          cmdState: [],\n          f: f\n        };\n      },\n      copyState: function(s) {\n        return {\n          cmdState: s.cmdState.slice(),\n          f: s.f\n        };\n      },\n      token: function(stream, state) {\n        return state.f(stream, state);\n      },\n      blankLine: function(state) {\n        state.f = normal;\n        state.cmdState.length = 0;\n      },\n      lineComment: \"%\"\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-stex\", \"stex\");\n  CodeMirror.defineMIME(\"text/x-latex\", \"stex\");\n\n});\n"],
  "mappings": "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",
  "names": ["CodeMirror", "source", "state"]
}
