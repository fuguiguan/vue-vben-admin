import {
  require_codemirror
} from "./chunk-GI5J7NWS.js";
import {
  __commonJS
} from "./chunk-WGAPYIUP.js";

// node_modules/.pnpm/codemirror@5.65.16/node_modules/codemirror/mode/spreadsheet/spreadsheet.js
var require_spreadsheet = __commonJS({
  "node_modules/.pnpm/codemirror@5.65.16/node_modules/codemirror/mode/spreadsheet/spreadsheet.js"(exports, module) {
    (function(mod) {
      if (typeof exports == "object" && typeof module == "object")
        mod(require_codemirror());
      else if (typeof define == "function" && define.amd)
        define(["../../lib/codemirror"], mod);
      else
        mod(CodeMirror);
    })(function(CodeMirror2) {
      "use strict";
      CodeMirror2.defineMode("spreadsheet", function() {
        return {
          startState: function() {
            return {
              stringType: null,
              stack: []
            };
          },
          token: function(stream, state) {
            if (!stream)
              return;
            if (state.stack.length === 0) {
              if (stream.peek() == '"' || stream.peek() == "'") {
                state.stringType = stream.peek();
                stream.next();
                state.stack.unshift("string");
              }
            }
            switch (state.stack[0]) {
              case "string":
                while (state.stack[0] === "string" && !stream.eol()) {
                  if (stream.peek() === state.stringType) {
                    stream.next();
                    state.stack.shift();
                  } else if (stream.peek() === "\\") {
                    stream.next();
                    stream.next();
                  } else {
                    stream.match(/^.[^\\\"\']*/);
                  }
                }
                return "string";
              case "characterClass":
                while (state.stack[0] === "characterClass" && !stream.eol()) {
                  if (!(stream.match(/^[^\]\\]+/) || stream.match(/^\\./)))
                    state.stack.shift();
                }
                return "operator";
            }
            var peek = stream.peek();
            switch (peek) {
              case "[":
                stream.next();
                state.stack.unshift("characterClass");
                return "bracket";
              case ":":
                stream.next();
                return "operator";
              case "\\":
                if (stream.match(/\\[a-z]+/))
                  return "string-2";
                else {
                  stream.next();
                  return "atom";
                }
              case ".":
              case ",":
              case ";":
              case "*":
              case "-":
              case "+":
              case "^":
              case "<":
              case "/":
              case "=":
                stream.next();
                return "atom";
              case "$":
                stream.next();
                return "builtin";
            }
            if (stream.match(/\d+/)) {
              if (stream.match(/^\w+/))
                return "error";
              return "number";
            } else if (stream.match(/^[a-zA-Z_]\w*/)) {
              if (stream.match(/(?=[\(.])/, false))
                return "keyword";
              return "variable-2";
            } else if (["[", "]", "(", ")", "{", "}"].indexOf(peek) != -1) {
              stream.next();
              return "bracket";
            } else if (!stream.eatSpace()) {
              stream.next();
            }
            return null;
          }
        };
      });
      CodeMirror2.defineMIME("text/x-spreadsheet", "spreadsheet");
    });
  }
});
export default require_spreadsheet();
//# sourceMappingURL=codemirror_mode_spreadsheet_spreadsheet.js.map
