{
  "version": 3,
  "sources": ["../../.pnpm/codemirror@5.65.16/node_modules/codemirror/mode/handlebars/handlebars.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"), require(\"../../addon/mode/multiplex\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\", \"../../addon/mode/multiplex\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode(\"handlebars-tags\", {\n    start: [\n      { regex: /\\{\\{\\{/, push: \"handlebars_raw\", token: \"tag\" },\n      { regex: /\\{\\{!--/, push: \"dash_comment\", token: \"comment\" },\n      { regex: /\\{\\{!/,   push: \"comment\", token: \"comment\" },\n      { regex: /\\{\\{/,    push: \"handlebars\", token: \"tag\" }\n    ],\n    handlebars_raw: [\n      { regex: /\\}\\}\\}/, pop: true, token: \"tag\" },\n    ],\n    handlebars: [\n      { regex: /\\}\\}/, pop: true, token: \"tag\" },\n\n      // Double and single quotes\n      { regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/, token: \"string\" },\n      { regex: /'(?:[^\\\\']|\\\\.)*'?/, token: \"string\" },\n\n      // Handlebars keywords\n      { regex: />|[#\\/]([A-Za-z_]\\w*)/, token: \"keyword\" },\n      { regex: /(?:else|this)\\b/, token: \"keyword\" },\n\n      // Numeral\n      { regex: /\\d+/i, token: \"number\" },\n\n      // Atoms like = and .\n      { regex: /=|~|@|true|false/, token: \"atom\" },\n\n      // Paths\n      { regex: /(?:\\.\\.\\/)*(?:[A-Za-z_][\\w\\.]*)+/, token: \"variable-2\" }\n    ],\n    dash_comment: [\n      { regex: /--\\}\\}/, pop: true, token: \"comment\" },\n\n      // Commented code\n      { regex: /./, token: \"comment\"}\n    ],\n    comment: [\n      { regex: /\\}\\}/, pop: true, token: \"comment\" },\n      { regex: /./, token: \"comment\" }\n    ],\n    meta: {\n      blockCommentStart: \"{{--\",\n      blockCommentEnd: \"--}}\"\n    }\n  });\n\n  CodeMirror.defineMode(\"handlebars\", function(config, parserConfig) {\n    var handlebars = CodeMirror.getMode(config, \"handlebars-tags\");\n    if (!parserConfig || !parserConfig.base) return handlebars;\n    return CodeMirror.multiplexingMode(\n      CodeMirror.getMode(config, parserConfig.base),\n      {open: \"{{\", close: /\\}\\}\\}?/, mode: handlebars, parseDelimiters: true}\n    );\n  });\n\n  CodeMirror.defineMIME(\"text/x-handlebars-template\", \"handlebars\");\n});\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAGA,KAAC,SAAS,KAAK;AACb,UAAI,OAAO,WAAW,YAAY,OAAO,UAAU;AACjD,YAAI,sBAAiC,kBAAoC,mBAAqC;AAAA,eACvG,OAAO,UAAU,cAAc,OAAO;AAC7C,eAAO,CAAC,wBAAwB,2BAA2B,4BAA4B,GAAG,GAAG;AAAA;AAE7F,YAAI,UAAU;AAAA,IAClB,GAAG,SAASA,aAAY;AACtB;AAEA,MAAAA,YAAW,iBAAiB,mBAAmB;AAAA,QAC7C,OAAO;AAAA,UACL,EAAE,OAAO,UAAU,MAAM,kBAAkB,OAAO,MAAM;AAAA,UACxD,EAAE,OAAO,WAAW,MAAM,gBAAgB,OAAO,UAAU;AAAA,UAC3D,EAAE,OAAO,SAAW,MAAM,WAAW,OAAO,UAAU;AAAA,UACtD,EAAE,OAAO,QAAW,MAAM,cAAc,OAAO,MAAM;AAAA,QACvD;AAAA,QACA,gBAAgB;AAAA,UACd,EAAE,OAAO,UAAU,KAAK,MAAM,OAAO,MAAM;AAAA,QAC7C;AAAA,QACA,YAAY;AAAA,UACV,EAAE,OAAO,QAAQ,KAAK,MAAM,OAAO,MAAM;AAAA;AAAA,UAGzC,EAAE,OAAO,sBAAsB,OAAO,SAAS;AAAA,UAC/C,EAAE,OAAO,sBAAsB,OAAO,SAAS;AAAA;AAAA,UAG/C,EAAE,OAAO,yBAAyB,OAAO,UAAU;AAAA,UACnD,EAAE,OAAO,mBAAmB,OAAO,UAAU;AAAA;AAAA,UAG7C,EAAE,OAAO,QAAQ,OAAO,SAAS;AAAA;AAAA,UAGjC,EAAE,OAAO,oBAAoB,OAAO,OAAO;AAAA;AAAA,UAG3C,EAAE,OAAO,oCAAoC,OAAO,aAAa;AAAA,QACnE;AAAA,QACA,cAAc;AAAA,UACZ,EAAE,OAAO,UAAU,KAAK,MAAM,OAAO,UAAU;AAAA;AAAA,UAG/C,EAAE,OAAO,KAAK,OAAO,UAAS;AAAA,QAChC;AAAA,QACA,SAAS;AAAA,UACP,EAAE,OAAO,QAAQ,KAAK,MAAM,OAAO,UAAU;AAAA,UAC7C,EAAE,OAAO,KAAK,OAAO,UAAU;AAAA,QACjC;AAAA,QACA,MAAM;AAAA,UACJ,mBAAmB;AAAA,UACnB,iBAAiB;AAAA,QACnB;AAAA,MACF,CAAC;AAED,MAAAA,YAAW,WAAW,cAAc,SAAS,QAAQ,cAAc;AACjE,YAAI,aAAaA,YAAW,QAAQ,QAAQ,iBAAiB;AAC7D,YAAI,CAAC,gBAAgB,CAAC,aAAa;AAAM,iBAAO;AAChD,eAAOA,YAAW;AAAA,UAChBA,YAAW,QAAQ,QAAQ,aAAa,IAAI;AAAA,UAC5C,EAAC,MAAM,MAAM,OAAO,WAAW,MAAM,YAAY,iBAAiB,KAAI;AAAA,QACxE;AAAA,MACF,CAAC;AAED,MAAAA,YAAW,WAAW,8BAA8B,YAAY;AAAA,IAClE,CAAC;AAAA;AAAA;",
  "names": ["CodeMirror"]
}
