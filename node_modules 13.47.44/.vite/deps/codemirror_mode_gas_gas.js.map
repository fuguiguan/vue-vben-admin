{
  "version": 3,
  "sources": ["../../.pnpm/codemirror@5.65.16/node_modules/codemirror/mode/gas/gas.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"gas\", function(_config, parserConfig) {\n  'use strict';\n\n  // If an architecture is specified, its initialization function may\n  // populate this array with custom parsing functions which will be\n  // tried in the event that the standard functions do not find a match.\n  var custom = [];\n\n  // The symbol used to start a line comment changes based on the target\n  // architecture.\n  // If no architecture is pased in \"parserConfig\" then only multiline\n  // comments will have syntax support.\n  var lineCommentStartSymbol = \"\";\n\n  // These directives are architecture independent.\n  // Machine specific directives should go in their respective\n  // architecture initialization function.\n  // Reference:\n  // http://sourceware.org/binutils/docs/as/Pseudo-Ops.html#Pseudo-Ops\n  var directives = {\n    \".abort\" : \"builtin\",\n    \".align\" : \"builtin\",\n    \".altmacro\" : \"builtin\",\n    \".ascii\" : \"builtin\",\n    \".asciz\" : \"builtin\",\n    \".balign\" : \"builtin\",\n    \".balignw\" : \"builtin\",\n    \".balignl\" : \"builtin\",\n    \".bundle_align_mode\" : \"builtin\",\n    \".bundle_lock\" : \"builtin\",\n    \".bundle_unlock\" : \"builtin\",\n    \".byte\" : \"builtin\",\n    \".cfi_startproc\" : \"builtin\",\n    \".comm\" : \"builtin\",\n    \".data\" : \"builtin\",\n    \".def\" : \"builtin\",\n    \".desc\" : \"builtin\",\n    \".dim\" : \"builtin\",\n    \".double\" : \"builtin\",\n    \".eject\" : \"builtin\",\n    \".else\" : \"builtin\",\n    \".elseif\" : \"builtin\",\n    \".end\" : \"builtin\",\n    \".endef\" : \"builtin\",\n    \".endfunc\" : \"builtin\",\n    \".endif\" : \"builtin\",\n    \".equ\" : \"builtin\",\n    \".equiv\" : \"builtin\",\n    \".eqv\" : \"builtin\",\n    \".err\" : \"builtin\",\n    \".error\" : \"builtin\",\n    \".exitm\" : \"builtin\",\n    \".extern\" : \"builtin\",\n    \".fail\" : \"builtin\",\n    \".file\" : \"builtin\",\n    \".fill\" : \"builtin\",\n    \".float\" : \"builtin\",\n    \".func\" : \"builtin\",\n    \".global\" : \"builtin\",\n    \".gnu_attribute\" : \"builtin\",\n    \".hidden\" : \"builtin\",\n    \".hword\" : \"builtin\",\n    \".ident\" : \"builtin\",\n    \".if\" : \"builtin\",\n    \".incbin\" : \"builtin\",\n    \".include\" : \"builtin\",\n    \".int\" : \"builtin\",\n    \".internal\" : \"builtin\",\n    \".irp\" : \"builtin\",\n    \".irpc\" : \"builtin\",\n    \".lcomm\" : \"builtin\",\n    \".lflags\" : \"builtin\",\n    \".line\" : \"builtin\",\n    \".linkonce\" : \"builtin\",\n    \".list\" : \"builtin\",\n    \".ln\" : \"builtin\",\n    \".loc\" : \"builtin\",\n    \".loc_mark_labels\" : \"builtin\",\n    \".local\" : \"builtin\",\n    \".long\" : \"builtin\",\n    \".macro\" : \"builtin\",\n    \".mri\" : \"builtin\",\n    \".noaltmacro\" : \"builtin\",\n    \".nolist\" : \"builtin\",\n    \".octa\" : \"builtin\",\n    \".offset\" : \"builtin\",\n    \".org\" : \"builtin\",\n    \".p2align\" : \"builtin\",\n    \".popsection\" : \"builtin\",\n    \".previous\" : \"builtin\",\n    \".print\" : \"builtin\",\n    \".protected\" : \"builtin\",\n    \".psize\" : \"builtin\",\n    \".purgem\" : \"builtin\",\n    \".pushsection\" : \"builtin\",\n    \".quad\" : \"builtin\",\n    \".reloc\" : \"builtin\",\n    \".rept\" : \"builtin\",\n    \".sbttl\" : \"builtin\",\n    \".scl\" : \"builtin\",\n    \".section\" : \"builtin\",\n    \".set\" : \"builtin\",\n    \".short\" : \"builtin\",\n    \".single\" : \"builtin\",\n    \".size\" : \"builtin\",\n    \".skip\" : \"builtin\",\n    \".sleb128\" : \"builtin\",\n    \".space\" : \"builtin\",\n    \".stab\" : \"builtin\",\n    \".string\" : \"builtin\",\n    \".struct\" : \"builtin\",\n    \".subsection\" : \"builtin\",\n    \".symver\" : \"builtin\",\n    \".tag\" : \"builtin\",\n    \".text\" : \"builtin\",\n    \".title\" : \"builtin\",\n    \".type\" : \"builtin\",\n    \".uleb128\" : \"builtin\",\n    \".val\" : \"builtin\",\n    \".version\" : \"builtin\",\n    \".vtable_entry\" : \"builtin\",\n    \".vtable_inherit\" : \"builtin\",\n    \".warning\" : \"builtin\",\n    \".weak\" : \"builtin\",\n    \".weakref\" : \"builtin\",\n    \".word\" : \"builtin\"\n  };\n\n  var registers = {};\n\n  function x86(_parserConfig) {\n    lineCommentStartSymbol = \"#\";\n\n    registers.al  = \"variable\";\n    registers.ah  = \"variable\";\n    registers.ax  = \"variable\";\n    registers.eax = \"variable-2\";\n    registers.rax = \"variable-3\";\n\n    registers.bl  = \"variable\";\n    registers.bh  = \"variable\";\n    registers.bx  = \"variable\";\n    registers.ebx = \"variable-2\";\n    registers.rbx = \"variable-3\";\n\n    registers.cl  = \"variable\";\n    registers.ch  = \"variable\";\n    registers.cx  = \"variable\";\n    registers.ecx = \"variable-2\";\n    registers.rcx = \"variable-3\";\n\n    registers.dl  = \"variable\";\n    registers.dh  = \"variable\";\n    registers.dx  = \"variable\";\n    registers.edx = \"variable-2\";\n    registers.rdx = \"variable-3\";\n\n    registers.si  = \"variable\";\n    registers.esi = \"variable-2\";\n    registers.rsi = \"variable-3\";\n\n    registers.di  = \"variable\";\n    registers.edi = \"variable-2\";\n    registers.rdi = \"variable-3\";\n\n    registers.sp  = \"variable\";\n    registers.esp = \"variable-2\";\n    registers.rsp = \"variable-3\";\n\n    registers.bp  = \"variable\";\n    registers.ebp = \"variable-2\";\n    registers.rbp = \"variable-3\";\n\n    registers.ip  = \"variable\";\n    registers.eip = \"variable-2\";\n    registers.rip = \"variable-3\";\n\n    registers.cs  = \"keyword\";\n    registers.ds  = \"keyword\";\n    registers.ss  = \"keyword\";\n    registers.es  = \"keyword\";\n    registers.fs  = \"keyword\";\n    registers.gs  = \"keyword\";\n  }\n\n  function armv6(_parserConfig) {\n    // Reference:\n    // http://infocenter.arm.com/help/topic/com.arm.doc.qrc0001l/QRC0001_UAL.pdf\n    // http://infocenter.arm.com/help/topic/com.arm.doc.ddi0301h/DDI0301H_arm1176jzfs_r0p7_trm.pdf\n    lineCommentStartSymbol = \"@\";\n    directives.syntax = \"builtin\";\n\n    registers.r0  = \"variable\";\n    registers.r1  = \"variable\";\n    registers.r2  = \"variable\";\n    registers.r3  = \"variable\";\n    registers.r4  = \"variable\";\n    registers.r5  = \"variable\";\n    registers.r6  = \"variable\";\n    registers.r7  = \"variable\";\n    registers.r8  = \"variable\";\n    registers.r9  = \"variable\";\n    registers.r10 = \"variable\";\n    registers.r11 = \"variable\";\n    registers.r12 = \"variable\";\n\n    registers.sp  = \"variable-2\";\n    registers.lr  = \"variable-2\";\n    registers.pc  = \"variable-2\";\n    registers.r13 = registers.sp;\n    registers.r14 = registers.lr;\n    registers.r15 = registers.pc;\n\n    custom.push(function(ch, stream) {\n      if (ch === '#') {\n        stream.eatWhile(/\\w/);\n        return \"number\";\n      }\n    });\n  }\n\n  var arch = (parserConfig.architecture || \"x86\").toLowerCase();\n  if (arch === \"x86\") {\n    x86(parserConfig);\n  } else if (arch === \"arm\" || arch === \"armv6\") {\n    armv6(parserConfig);\n  }\n\n  function nextUntilUnescaped(stream, end) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (next === end && !escaped) {\n        return false;\n      }\n      escaped = !escaped && next === \"\\\\\";\n    }\n    return escaped;\n  }\n\n  function clikeComment(stream, state) {\n    var maybeEnd = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (ch === \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch === \"*\");\n    }\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {\n        tokenize: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (state.tokenize) {\n        return state.tokenize(stream, state);\n      }\n\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      var style, cur, ch = stream.next();\n\n      if (ch === \"/\") {\n        if (stream.eat(\"*\")) {\n          state.tokenize = clikeComment;\n          return clikeComment(stream, state);\n        }\n      }\n\n      if (ch === lineCommentStartSymbol) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      if (ch === '\"') {\n        nextUntilUnescaped(stream, '\"');\n        return \"string\";\n      }\n\n      if (ch === '.') {\n        stream.eatWhile(/\\w/);\n        cur = stream.current().toLowerCase();\n        style = directives[cur];\n        return style || null;\n      }\n\n      if (ch === '=') {\n        stream.eatWhile(/\\w/);\n        return \"tag\";\n      }\n\n      if (ch === '{') {\n        return \"bracket\";\n      }\n\n      if (ch === '}') {\n        return \"bracket\";\n      }\n\n      if (/\\d/.test(ch)) {\n        if (ch === \"0\" && stream.eat(\"x\")) {\n          stream.eatWhile(/[0-9a-fA-F]/);\n          return \"number\";\n        }\n        stream.eatWhile(/\\d/);\n        return \"number\";\n      }\n\n      if (/\\w/.test(ch)) {\n        stream.eatWhile(/\\w/);\n        if (stream.eat(\":\")) {\n          return 'tag';\n        }\n        cur = stream.current().toLowerCase();\n        style = registers[cur];\n        return style || null;\n      }\n\n      for (var i = 0; i < custom.length; i++) {\n        style = custom[i](ch, stream, state);\n        if (style) {\n          return style;\n        }\n      }\n    },\n\n    lineComment: lineCommentStartSymbol,\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\"\n  };\n});\n\n});\n"],
  "mappings": "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",
  "names": ["CodeMirror"]
}
