{
  "version": 3,
  "sources": ["../../.pnpm/codemirror@5.65.16/node_modules/codemirror/mode/textile/textile.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") { // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  } else if (typeof define == \"function\" && define.amd) { // AMD\n    define([\"../../lib/codemirror\"], mod);\n  } else { // Plain browser env\n    mod(CodeMirror);\n  }\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var TOKEN_STYLES = {\n    addition: \"positive\",\n    attributes: \"attribute\",\n    bold: \"strong\",\n    cite: \"keyword\",\n    code: \"atom\",\n    definitionList: \"number\",\n    deletion: \"negative\",\n    div: \"punctuation\",\n    em: \"em\",\n    footnote: \"variable\",\n    footCite: \"qualifier\",\n    header: \"header\",\n    html: \"comment\",\n    image: \"string\",\n    italic: \"em\",\n    link: \"link\",\n    linkDefinition: \"link\",\n    list1: \"variable-2\",\n    list2: \"variable-3\",\n    list3: \"keyword\",\n    notextile: \"string-2\",\n    pre: \"operator\",\n    p: \"property\",\n    quote: \"bracket\",\n    span: \"quote\",\n    specialChar: \"tag\",\n    strong: \"strong\",\n    sub: \"builtin\",\n    sup: \"builtin\",\n    table: \"variable-3\",\n    tableHeading: \"operator\"\n  };\n\n  function startNewLine(stream, state) {\n    state.mode = Modes.newLayout;\n    state.tableHeading = false;\n\n    if (state.layoutType === \"definitionList\" && state.spanningLayout &&\n        stream.match(RE(\"definitionListEnd\"), false))\n      state.spanningLayout = false;\n  }\n\n  function handlePhraseModifier(stream, state, ch) {\n    if (ch === \"_\") {\n      if (stream.eat(\"_\"))\n        return togglePhraseModifier(stream, state, \"italic\", /__/, 2);\n      else\n        return togglePhraseModifier(stream, state, \"em\", /_/, 1);\n    }\n\n    if (ch === \"*\") {\n      if (stream.eat(\"*\")) {\n        return togglePhraseModifier(stream, state, \"bold\", /\\*\\*/, 2);\n      }\n      return togglePhraseModifier(stream, state, \"strong\", /\\*/, 1);\n    }\n\n    if (ch === \"[\") {\n      if (stream.match(/\\d+\\]/)) state.footCite = true;\n      return tokenStyles(state);\n    }\n\n    if (ch === \"(\") {\n      var spec = stream.match(/^(r|tm|c)\\)/);\n      if (spec)\n        return tokenStylesWith(state, TOKEN_STYLES.specialChar);\n    }\n\n    if (ch === \"<\" && stream.match(/(\\w+)[^>]+>[^<]+<\\/\\1>/))\n      return tokenStylesWith(state, TOKEN_STYLES.html);\n\n    if (ch === \"?\" && stream.eat(\"?\"))\n      return togglePhraseModifier(stream, state, \"cite\", /\\?\\?/, 2);\n\n    if (ch === \"=\" && stream.eat(\"=\"))\n      return togglePhraseModifier(stream, state, \"notextile\", /==/, 2);\n\n    if (ch === \"-\" && !stream.eat(\"-\"))\n      return togglePhraseModifier(stream, state, \"deletion\", /-/, 1);\n\n    if (ch === \"+\")\n      return togglePhraseModifier(stream, state, \"addition\", /\\+/, 1);\n\n    if (ch === \"~\")\n      return togglePhraseModifier(stream, state, \"sub\", /~/, 1);\n\n    if (ch === \"^\")\n      return togglePhraseModifier(stream, state, \"sup\", /\\^/, 1);\n\n    if (ch === \"%\")\n      return togglePhraseModifier(stream, state, \"span\", /%/, 1);\n\n    if (ch === \"@\")\n      return togglePhraseModifier(stream, state, \"code\", /@/, 1);\n\n    if (ch === \"!\") {\n      var type = togglePhraseModifier(stream, state, \"image\", /(?:\\([^\\)]+\\))?!/, 1);\n      stream.match(/^:\\S+/); // optional Url portion\n      return type;\n    }\n    return tokenStyles(state);\n  }\n\n  function togglePhraseModifier(stream, state, phraseModifier, closeRE, openSize) {\n    var charBefore = stream.pos > openSize ? stream.string.charAt(stream.pos - openSize - 1) : null;\n    var charAfter = stream.peek();\n    if (state[phraseModifier]) {\n      if ((!charAfter || /\\W/.test(charAfter)) && charBefore && /\\S/.test(charBefore)) {\n        var type = tokenStyles(state);\n        state[phraseModifier] = false;\n        return type;\n      }\n    } else if ((!charBefore || /\\W/.test(charBefore)) && charAfter && /\\S/.test(charAfter) &&\n               stream.match(new RegExp(\"^.*\\\\S\" + closeRE.source + \"(?:\\\\W|$)\"), false)) {\n      state[phraseModifier] = true;\n      state.mode = Modes.attributes;\n    }\n    return tokenStyles(state);\n  };\n\n  function tokenStyles(state) {\n    var disabled = textileDisabled(state);\n    if (disabled) return disabled;\n\n    var styles = [];\n    if (state.layoutType) styles.push(TOKEN_STYLES[state.layoutType]);\n\n    styles = styles.concat(activeStyles(\n      state, \"addition\", \"bold\", \"cite\", \"code\", \"deletion\", \"em\", \"footCite\",\n      \"image\", \"italic\", \"link\", \"span\", \"strong\", \"sub\", \"sup\", \"table\", \"tableHeading\"));\n\n    if (state.layoutType === \"header\")\n      styles.push(TOKEN_STYLES.header + \"-\" + state.header);\n\n    return styles.length ? styles.join(\" \") : null;\n  }\n\n  function textileDisabled(state) {\n    var type = state.layoutType;\n\n    switch(type) {\n    case \"notextile\":\n    case \"code\":\n    case \"pre\":\n      return TOKEN_STYLES[type];\n    default:\n      if (state.notextile)\n        return TOKEN_STYLES.notextile + (type ? (\" \" + TOKEN_STYLES[type]) : \"\");\n      return null;\n    }\n  }\n\n  function tokenStylesWith(state, extraStyles) {\n    var disabled = textileDisabled(state);\n    if (disabled) return disabled;\n\n    var type = tokenStyles(state);\n    if (extraStyles)\n      return type ? (type + \" \" + extraStyles) : extraStyles;\n    else\n      return type;\n  }\n\n  function activeStyles(state) {\n    var styles = [];\n    for (var i = 1; i < arguments.length; ++i) {\n      if (state[arguments[i]])\n        styles.push(TOKEN_STYLES[arguments[i]]);\n    }\n    return styles;\n  }\n\n  function blankLine(state) {\n    var spanningLayout = state.spanningLayout, type = state.layoutType;\n\n    for (var key in state) if (state.hasOwnProperty(key))\n      delete state[key];\n\n    state.mode = Modes.newLayout;\n    if (spanningLayout) {\n      state.layoutType = type;\n      state.spanningLayout = true;\n    }\n  }\n\n  var REs = {\n    cache: {},\n    single: {\n      bc: \"bc\",\n      bq: \"bq\",\n      definitionList: /- .*?:=+/,\n      definitionListEnd: /.*=:\\s*$/,\n      div: \"div\",\n      drawTable: /\\|.*\\|/,\n      foot: /fn\\d+/,\n      header: /h[1-6]/,\n      html: /\\s*<(?:\\/)?(\\w+)(?:[^>]+)?>(?:[^<]+<\\/\\1>)?/,\n      link: /[^\"]+\":\\S/,\n      linkDefinition: /\\[[^\\s\\]]+\\]\\S+/,\n      list: /(?:#+|\\*+)/,\n      notextile: \"notextile\",\n      para: \"p\",\n      pre: \"pre\",\n      table: \"table\",\n      tableCellAttributes: /[\\/\\\\]\\d+/,\n      tableHeading: /\\|_\\./,\n      tableText: /[^\"_\\*\\[\\(\\?\\+~\\^%@|-]+/,\n      text: /[^!\"_=\\*\\[\\(<\\?\\+~\\^%@-]+/\n    },\n    attributes: {\n      align: /(?:<>|<|>|=)/,\n      selector: /\\([^\\(][^\\)]+\\)/,\n      lang: /\\[[^\\[\\]]+\\]/,\n      pad: /(?:\\(+|\\)+){1,2}/,\n      css: /\\{[^\\}]+\\}/\n    },\n    createRe: function(name) {\n      switch (name) {\n      case \"drawTable\":\n        return REs.makeRe(\"^\", REs.single.drawTable, \"$\");\n      case \"html\":\n        return REs.makeRe(\"^\", REs.single.html, \"(?:\", REs.single.html, \")*\", \"$\");\n      case \"linkDefinition\":\n        return REs.makeRe(\"^\", REs.single.linkDefinition, \"$\");\n      case \"listLayout\":\n        return REs.makeRe(\"^\", REs.single.list, RE(\"allAttributes\"), \"*\\\\s+\");\n      case \"tableCellAttributes\":\n        return REs.makeRe(\"^\", REs.choiceRe(REs.single.tableCellAttributes,\n                                            RE(\"allAttributes\")), \"+\\\\.\");\n      case \"type\":\n        return REs.makeRe(\"^\", RE(\"allTypes\"));\n      case \"typeLayout\":\n        return REs.makeRe(\"^\", RE(\"allTypes\"), RE(\"allAttributes\"),\n                          \"*\\\\.\\\\.?\", \"(\\\\s+|$)\");\n      case \"attributes\":\n        return REs.makeRe(\"^\", RE(\"allAttributes\"), \"+\");\n\n      case \"allTypes\":\n        return REs.choiceRe(REs.single.div, REs.single.foot,\n                            REs.single.header, REs.single.bc, REs.single.bq,\n                            REs.single.notextile, REs.single.pre, REs.single.table,\n                            REs.single.para);\n\n      case \"allAttributes\":\n        return REs.choiceRe(REs.attributes.selector, REs.attributes.css,\n                            REs.attributes.lang, REs.attributes.align, REs.attributes.pad);\n\n      default:\n        return REs.makeRe(\"^\", REs.single[name]);\n      }\n    },\n    makeRe: function() {\n      var pattern = \"\";\n      for (var i = 0; i < arguments.length; ++i) {\n        var arg = arguments[i];\n        pattern += (typeof arg === \"string\") ? arg : arg.source;\n      }\n      return new RegExp(pattern);\n    },\n    choiceRe: function() {\n      var parts = [arguments[0]];\n      for (var i = 1; i < arguments.length; ++i) {\n        parts[i * 2 - 1] = \"|\";\n        parts[i * 2] = arguments[i];\n      }\n\n      parts.unshift(\"(?:\");\n      parts.push(\")\");\n      return REs.makeRe.apply(null, parts);\n    }\n  };\n\n  function RE(name) {\n    return (REs.cache[name] || (REs.cache[name] = REs.createRe(name)));\n  }\n\n  var Modes = {\n    newLayout: function(stream, state) {\n      if (stream.match(RE(\"typeLayout\"), false)) {\n        state.spanningLayout = false;\n        return (state.mode = Modes.blockType)(stream, state);\n      }\n      var newMode;\n      if (!textileDisabled(state)) {\n        if (stream.match(RE(\"listLayout\"), false))\n          newMode = Modes.list;\n        else if (stream.match(RE(\"drawTable\"), false))\n          newMode = Modes.table;\n        else if (stream.match(RE(\"linkDefinition\"), false))\n          newMode = Modes.linkDefinition;\n        else if (stream.match(RE(\"definitionList\")))\n          newMode = Modes.definitionList;\n        else if (stream.match(RE(\"html\"), false))\n          newMode = Modes.html;\n      }\n      return (state.mode = (newMode || Modes.text))(stream, state);\n    },\n\n    blockType: function(stream, state) {\n      var match, type;\n      state.layoutType = null;\n\n      if (match = stream.match(RE(\"type\")))\n        type = match[0];\n      else\n        return (state.mode = Modes.text)(stream, state);\n\n      if (match = type.match(RE(\"header\"))) {\n        state.layoutType = \"header\";\n        state.header = parseInt(match[0][1]);\n      } else if (type.match(RE(\"bq\"))) {\n        state.layoutType = \"quote\";\n      } else if (type.match(RE(\"bc\"))) {\n        state.layoutType = \"code\";\n      } else if (type.match(RE(\"foot\"))) {\n        state.layoutType = \"footnote\";\n      } else if (type.match(RE(\"notextile\"))) {\n        state.layoutType = \"notextile\";\n      } else if (type.match(RE(\"pre\"))) {\n        state.layoutType = \"pre\";\n      } else if (type.match(RE(\"div\"))) {\n        state.layoutType = \"div\";\n      } else if (type.match(RE(\"table\"))) {\n        state.layoutType = \"table\";\n      }\n\n      state.mode = Modes.attributes;\n      return tokenStyles(state);\n    },\n\n    text: function(stream, state) {\n      if (stream.match(RE(\"text\"))) return tokenStyles(state);\n\n      var ch = stream.next();\n      if (ch === '\"')\n        return (state.mode = Modes.link)(stream, state);\n      return handlePhraseModifier(stream, state, ch);\n    },\n\n    attributes: function(stream, state) {\n      state.mode = Modes.layoutLength;\n\n      if (stream.match(RE(\"attributes\")))\n        return tokenStylesWith(state, TOKEN_STYLES.attributes);\n      else\n        return tokenStyles(state);\n    },\n\n    layoutLength: function(stream, state) {\n      if (stream.eat(\".\") && stream.eat(\".\"))\n        state.spanningLayout = true;\n\n      state.mode = Modes.text;\n      return tokenStyles(state);\n    },\n\n    list: function(stream, state) {\n      var match = stream.match(RE(\"list\"));\n      state.listDepth = match[0].length;\n      var listMod = (state.listDepth - 1) % 3;\n      if (!listMod)\n        state.layoutType = \"list1\";\n      else if (listMod === 1)\n        state.layoutType = \"list2\";\n      else\n        state.layoutType = \"list3\";\n\n      state.mode = Modes.attributes;\n      return tokenStyles(state);\n    },\n\n    link: function(stream, state) {\n      state.mode = Modes.text;\n      if (stream.match(RE(\"link\"))) {\n        stream.match(/\\S+/);\n        return tokenStylesWith(state, TOKEN_STYLES.link);\n      }\n      return tokenStyles(state);\n    },\n\n    linkDefinition: function(stream, state) {\n      stream.skipToEnd();\n      return tokenStylesWith(state, TOKEN_STYLES.linkDefinition);\n    },\n\n    definitionList: function(stream, state) {\n      stream.match(RE(\"definitionList\"));\n\n      state.layoutType = \"definitionList\";\n\n      if (stream.match(/\\s*$/))\n        state.spanningLayout = true;\n      else\n        state.mode = Modes.attributes;\n\n      return tokenStyles(state);\n    },\n\n    html: function(stream, state) {\n      stream.skipToEnd();\n      return tokenStylesWith(state, TOKEN_STYLES.html);\n    },\n\n    table: function(stream, state) {\n      state.layoutType = \"table\";\n      return (state.mode = Modes.tableCell)(stream, state);\n    },\n\n    tableCell: function(stream, state) {\n      if (stream.match(RE(\"tableHeading\")))\n        state.tableHeading = true;\n      else\n        stream.eat(\"|\");\n\n      state.mode = Modes.tableCellAttributes;\n      return tokenStyles(state);\n    },\n\n    tableCellAttributes: function(stream, state) {\n      state.mode = Modes.tableText;\n\n      if (stream.match(RE(\"tableCellAttributes\")))\n        return tokenStylesWith(state, TOKEN_STYLES.attributes);\n      else\n        return tokenStyles(state);\n    },\n\n    tableText: function(stream, state) {\n      if (stream.match(RE(\"tableText\")))\n        return tokenStyles(state);\n\n      if (stream.peek() === \"|\") { // end of cell\n        state.mode = Modes.tableCell;\n        return tokenStyles(state);\n      }\n      return handlePhraseModifier(stream, state, stream.next());\n    }\n  };\n\n  CodeMirror.defineMode(\"textile\", function() {\n    return {\n      startState: function() {\n        return { mode: Modes.newLayout };\n      },\n      token: function(stream, state) {\n        if (stream.sol()) startNewLine(stream, state);\n        return state.mode(stream, state);\n      },\n      blankLine: blankLine\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-textile\", \"textile\");\n});\n"],
  "mappings": "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",
  "names": ["CodeMirror"]
}
