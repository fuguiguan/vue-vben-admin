{
  "version": 3,
  "sources": ["../../.pnpm/codemirror@5.65.16/node_modules/codemirror/mode/gfm/gfm.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../markdown/markdown\"), require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../markdown/markdown\", \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar urlRE = /^((?:(?:aaas?|about|acap|adiumxtra|af[ps]|aim|apt|attachment|aw|beshare|bitcoin|bolo|callto|cap|chrome(?:-extension)?|cid|coap|com-eventbrite-attendee|content|crid|cvs|data|dav|dict|dlna-(?:playcontainer|playsingle)|dns|doi|dtn|dvb|ed2k|facetime|feed|file|finger|fish|ftp|geo|gg|git|gizmoproject|go|gopher|gtalk|h323|hcp|https?|iax|icap|icon|im|imap|info|ipn|ipp|irc[6s]?|iris(?:\\.beep|\\.lwz|\\.xpc|\\.xpcs)?|itms|jar|javascript|jms|keyparc|lastfm|ldaps?|magnet|mailto|maps|market|message|mid|mms|ms-help|msnim|msrps?|mtqp|mumble|mupdate|mvn|news|nfs|nih?|nntp|notes|oid|opaquelocktoken|palm|paparazzi|platform|pop|pres|proxy|psyc|query|res(?:ource)?|rmi|rsync|rtmp|rtsp|secondlife|service|session|sftp|sgn|shttp|sieve|sips?|skype|sm[bs]|snmp|soap\\.beeps?|soldat|spotify|ssh|steam|svn|tag|teamspeak|tel(?:net)?|tftp|things|thismessage|tip|tn3270|tv|udp|unreal|urn|ut2004|vemmi|ventrilo|view-source|webcal|wss?|wtai|wyciwyg|xcon(?:-userid)?|xfire|xmlrpc\\.beeps?|xmpp|xri|ymsgr|z39\\.50[rs]?):(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]|\\([^\\s()<>]*\\))+(?:\\([^\\s()<>]*\\)|[^\\s`*!()\\[\\]{};:'\".,<>?«»“”‘’]))/i\n\nCodeMirror.defineMode(\"gfm\", function(config, modeConfig) {\n  var codeDepth = 0;\n  function blankLine(state) {\n    state.code = false;\n    return null;\n  }\n  var gfmOverlay = {\n    startState: function() {\n      return {\n        code: false,\n        codeBlock: false,\n        ateSpace: false\n      };\n    },\n    copyState: function(s) {\n      return {\n        code: s.code,\n        codeBlock: s.codeBlock,\n        ateSpace: s.ateSpace\n      };\n    },\n    token: function(stream, state) {\n      state.combineTokens = null;\n\n      // Hack to prevent formatting override inside code blocks (block and inline)\n      if (state.codeBlock) {\n        if (stream.match(/^```+/)) {\n          state.codeBlock = false;\n          return null;\n        }\n        stream.skipToEnd();\n        return null;\n      }\n      if (stream.sol()) {\n        state.code = false;\n      }\n      if (stream.sol() && stream.match(/^```+/)) {\n        stream.skipToEnd();\n        state.codeBlock = true;\n        return null;\n      }\n      // If this block is changed, it may need to be updated in Markdown mode\n      if (stream.peek() === '`') {\n        stream.next();\n        var before = stream.pos;\n        stream.eatWhile('`');\n        var difference = 1 + stream.pos - before;\n        if (!state.code) {\n          codeDepth = difference;\n          state.code = true;\n        } else {\n          if (difference === codeDepth) { // Must be exact\n            state.code = false;\n          }\n        }\n        return null;\n      } else if (state.code) {\n        stream.next();\n        return null;\n      }\n      // Check if space. If so, links can be formatted later on\n      if (stream.eatSpace()) {\n        state.ateSpace = true;\n        return null;\n      }\n      if (stream.sol() || state.ateSpace) {\n        state.ateSpace = false;\n        if (modeConfig.gitHubSpice !== false) {\n          if(stream.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+@)?(?=.{0,6}\\d)(?:[a-f0-9]{7,40}\\b)/)) {\n            // User/Project@SHA\n            // User@SHA\n            // SHA\n            state.combineTokens = true;\n            return \"link\";\n          } else if (stream.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+)?#[0-9]+\\b/)) {\n            // User/Project#Num\n            // User#Num\n            // #Num\n            state.combineTokens = true;\n            return \"link\";\n          }\n        }\n      }\n      if (stream.match(urlRE) &&\n          stream.string.slice(stream.start - 2, stream.start) != \"](\" &&\n          (stream.start == 0 || /\\W/.test(stream.string.charAt(stream.start - 1)))) {\n        // URLs\n        // Taken from http://daringfireball.net/2010/07/improved_regex_for_matching_urls\n        // And then (issue #1160) simplified to make it not crash the Chrome Regexp engine\n        // And then limited url schemes to the CommonMark list, so foo:bar isn't matched as a URL\n        state.combineTokens = true;\n        return \"link\";\n      }\n      stream.next();\n      return null;\n    },\n    blankLine: blankLine\n  };\n\n  var markdownConfig = {\n    taskLists: true,\n    strikethrough: true,\n    emoji: true\n  };\n  for (var attr in modeConfig) {\n    markdownConfig[attr] = modeConfig[attr];\n  }\n  markdownConfig.name = \"markdown\";\n  return CodeMirror.overlayMode(CodeMirror.getMode(config, markdownConfig), gfmOverlay);\n\n}, \"markdown\");\n\n  CodeMirror.defineMIME(\"text/x-gfm\", \"gfm\");\n});\n"],
  "mappings": "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",
  "names": ["CodeMirror"]
}
